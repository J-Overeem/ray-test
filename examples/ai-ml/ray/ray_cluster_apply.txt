[0m[1mrandom_password.grafana: Refreshing state... [id=none][0m
[0m[1mmodule.eks_blueprints.module.aws_eks.data.aws_caller_identity.current: Reading...[0m[0m
[0m[1mmodule.eks_blueprints.module.aws_eks.module.kms.data.aws_caller_identity.current: Reading...[0m[0m
[0m[1mmodule.eks_blueprints_kubernetes_addons.data.aws_partition.current: Reading...[0m[0m
[0m[1mmodule.eks_blueprints.module.aws_eks.data.aws_partition.current: Reading...[0m[0m
[0m[1mmodule.eks_blueprints_kubernetes_addons.data.aws_caller_identity.current: Reading...[0m[0m
[0m[1mmodule.eks_blueprints.data.aws_region.current: Reading...[0m[0m
[0m[1mmodule.eks_blueprints.module.aws_eks.module.kms.data.aws_partition.current: Reading...[0m[0m
[0m[1mmodule.eks_blueprints.data.aws_partition.current: Reading...[0m[0m
[0m[1mmodule.eks_blueprints.data.aws_region.current: Read complete after 0s [id=us-east-2][0m
[0m[1maws_kms_key.objects: Refreshing state... [id=bff15653-46d7-4209-be7f-d01ae40a64d5][0m
[0m[1maws_secretsmanager_secret.grafana: Refreshing state... [id=arn:aws:secretsmanager:us-east-2:296075517832:secret:grafana-20221227084218265600000001-0RYVji][0m
[0m[1mmodule.eks_blueprints.module.aws_eks.module.kms.data.aws_partition.current: Read complete after 0s [id=aws][0m
[0m[1mmodule.eks_blueprints.data.aws_partition.current: Read complete after 0s [id=aws][0m
[0m[1mdata.aws_caller_identity.current: Reading...[0m[0m
[0m[1mmodule.eks_blueprints_kubernetes_addons.data.aws_region.current: Reading...[0m[0m
[0m[1mmodule.eks_blueprints.module.aws_eks.data.aws_partition.current: Read complete after 0s [id=aws][0m
[0m[1mmodule.eks_blueprints_kubernetes_addons.data.aws_partition.current: Read complete after 0s [id=aws][0m
[0m[1mmodule.eks_blueprints_kubernetes_addons.data.aws_region.current: Read complete after 0s [id=us-east-2][0m
[0m[1mmodule.s3_bucket.aws_s3_bucket.this[0]: Refreshing state... [id=ray-demo-models-20221227084218266800000002][0m
[0m[1mmodule.eks_blueprints.data.aws_caller_identity.current: Reading...[0m[0m
[0m[1mdata.aws_availability_zones.available: Reading...[0m[0m
[0m[1mmodule.s3_bucket.data.aws_canonical_user_id.this: Reading...[0m[0m
[0m[1mmodule.eks_blueprints.data.aws_caller_identity.current: Read complete after 1s [id=296075517832][0m
[0m[1mdata.aws_caller_identity.current: Read complete after 1s [id=296075517832][0m
[0m[1mmodule.eks_blueprints.module.aws_eks.data.aws_caller_identity.current: Read complete after 1s [id=296075517832][0m
[0m[1mmodule.eks_blueprints.module.aws_eks.module.kms.data.aws_caller_identity.current: Read complete after 1s [id=296075517832][0m
[0m[1mmodule.eks_blueprints_kubernetes_addons.data.aws_caller_identity.current: Read complete after 1s [id=296075517832][0m
[0m[1mmodule.eks_blueprints.data.aws_iam_session_context.current: Reading...[0m[0m
[0m[1mmodule.eks_blueprints.module.aws_eks.data.aws_iam_policy_document.assume_role_policy[0]: Reading...[0m[0m
[0m[1mmodule.eks_blueprints.module.aws_eks.data.aws_iam_policy_document.assume_role_policy[0]: Read complete after 0s [id=2764486067][0m
[0m[1mmodule.eks_blueprints.module.aws_eks.aws_iam_role.this[0]: Refreshing state... [id=ray-cluster-role][0m
[0m[1mmodule.s3_bucket.aws_s3_bucket_public_access_block.this[0]: Refreshing state... [id=ray-demo-models-20221227084218266800000002][0m
[0m[1mdata.aws_availability_zones.available: Still reading... [10s elapsed][0m[0m
[0m[1mmodule.s3_bucket.data.aws_canonical_user_id.this: Still reading... [10s elapsed][0m[0m
[0m[1mmodule.eks_blueprints.data.aws_iam_session_context.current: Still reading... [10s elapsed][0m[0m
[0m[1mdata.aws_availability_zones.available: Read complete after 11s [id=us-east-2][0m
[0m[1mmodule.vpc.aws_eip.nat[0]: Refreshing state... [id=eipalloc-099296c524e33e4b7][0m
[0m[1mmodule.s3_bucket.data.aws_canonical_user_id.this: Read complete after 10s [id=e3549bcac4f662f062e9b89b5c7e9c37f24c915e8e1031687b9c0a46ff13de8b][0m
[0m[1mmodule.s3_bucket.aws_s3_bucket_server_side_encryption_configuration.this[0]: Refreshing state... [id=ray-demo-models-20221227084218266800000002][0m
[0m[1mdata.aws_iam_policy_document.irsa_policy: Reading...[0m[0m
[0m[1mdata.aws_iam_policy_document.irsa_policy: Read complete after 0s [id=3503588501][0m
[0m[1mmodule.eks_blueprints.data.aws_iam_session_context.current: Still reading... [20s elapsed][0m[0m
[0m[1mmodule.eks_blueprints.data.aws_iam_session_context.current: Still reading... [30s elapsed][0m[0m
[0m[1maws_secretsmanager_secret_version.grafana: Refreshing state... [id=arn:aws:secretsmanager:us-east-2:296075517832:secret:grafana-20221227084218265600000001-0RYVji|010093CE-423F-4B51-9A53-0AB12B2FBC8F][0m
[0m[1mmodule.eks_blueprints.data.aws_iam_session_context.current: Read complete after 31s [id=arn:aws:sts::296075517832:assumed-role/ADFS-Developer/overeemj@science.regn.net][0m
[0m[1mmodule.eks_blueprints.data.aws_iam_policy_document.eks_key: Reading...[0m[0m
[0m[1mmodule.eks_blueprints.data.aws_iam_policy_document.eks_key: Read complete after 0s [id=2563125738][0m
[0m[1mmodule.eks_blueprints.module.kms[0].aws_kms_key.this: Refreshing state... [id=09e4e45f-64fd-4da5-b63d-18dc11ff695a][0m
[0m[1mmodule.eks_blueprints.module.aws_eks.aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEKSClusterPolicy"]: Refreshing state... [id=ray-cluster-role-20221227084239802400000004][0m
[0m[1mmodule.eks_blueprints.module.aws_eks.aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"]: Refreshing state... [id=ray-cluster-role-20221227084239662100000003][0m
[0m[1mmodule.eks_blueprints.module.kms[0].aws_kms_alias.this: Refreshing state... [id=alias/ray][0m
[0m[1mmodule.eks_blueprints_kubernetes_addons.module.aws_load_balancer_controller[0].data.aws_iam_policy_document.aws_lb: Reading...[0m[0m
[0m[1mmodule.eks_blueprints_kubernetes_addons.module.aws_load_balancer_controller[0].data.aws_iam_policy_document.aws_lb: Read complete after 0s [id=2633998141][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
 [36m<=[0m read (data resources)
[0m
Terraform will perform the following actions:

[1m  # data.aws_eks_cluster_auth.this[0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "aws_eks_cluster_auth" "this" {
      [32m+[0m [0m[1m[0mid[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m  = (known after apply)
      [32m+[0m [0m[1m[0mtoken[0m[0m = (sensitive value)
    }

[1m  # data.kubernetes_ingress_v1.ingress[0m will be read during apply[0m
  # (depends on a resource or a module with changes pending)[0m
[0m [36m<=[0m[0m data "kubernetes_ingress_v1" "ingress" {
      [32m+[0m [0m[1m[0mid[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mspec[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mstatus[0m[0m = (known after apply)

      [32m+[0m [0mmetadata {
          [32m+[0m [0m[1m[0mgeneration[0m[0m       = (known after apply)
          [32m+[0m [0m[1m[0mname[0m[0m             = "ray-cluster-ingress"
          [32m+[0m [0m[1m[0mnamespace[0m[0m        = "ray-cluster"
          [32m+[0m [0m[1m[0mresource_version[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0muid[0m[0m              = (known after apply)
        }
    }

[1m  # aws_iam_policy.irsa_policy[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "irsa_policy" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m = "IAM Policy for IRSA"
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mname_prefix[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = "s3:ListBucket"
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "arn:aws:s3:::ray-demo-models-20221227084218266800000002"
                      [32m+[0m [0mSid      = ""
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = "s3:*Object"
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "arn:aws:s3:::ray-demo-models-20221227084218266800000002/*"
                      [32m+[0m [0mSid      = ""
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"ssm:PutParameter",
                          [32m+[0m [0m"ssm:GetParametersByPath",
                          [32m+[0m [0m"ssm:GetParameters",
                          [32m+[0m [0m"ssm:GetParameterHistory",
                          [32m+[0m [0m"ssm:GetParameter",
                          [32m+[0m [0m"ssm:DescribeParameters",
                          [32m+[0m [0m"ssm:DeleteParameters",
                          [32m+[0m [0m"ssm:DeleteParameter",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "arn:aws:ssm:us-east-2:296075517832:parameter/ray-*"
                      [32m+[0m [0mSid      = ""
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"kms:GenerateDataKey",
                          [32m+[0m [0m"kms:Decrypt",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "arn:aws:kms:us-east-2:296075517832:key/bff15653-46d7-4209-be7f-d01ae40a64d5"
                      [32m+[0m [0mSid      = ""
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = (known after apply)
    }

[1m  # grafana_dashboard.ray["dashboard_default.json"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "grafana_dashboard" "ray" {
      [32m+[0m [0m[1m[0mconfig_json[0m[0m  = jsonencode(
            {
              [32m+[0m [0mannotations          = {
                  [32m+[0m [0mlist = [
                      [32m+[0m [0m{
                          [32m+[0m [0mbuiltIn    = 1
                          [32m+[0m [0mdatasource = "-- Grafana --"
                          [32m+[0m [0menable     = true
                          [32m+[0m [0mhide       = true
                          [32m+[0m [0miconColor  = "rgba(0, 211, 255, 1)"
                          [32m+[0m [0mname       = "Annotations & Alerts"
                          [32m+[0m [0mtarget     = {
                              [32m+[0m [0mlimit    = 100
                              [32m+[0m [0mmatchAny = false
                              [32m+[0m [0mtags     = []
                              [32m+[0m [0mtype     = "dashboard"
                            }
                          [32m+[0m [0mtype       = "dashboard"
                        },
                    ]
                }
              [32m+[0m [0meditable             = true
              [32m+[0m [0mfiscalYearStartMonth = 0
              [32m+[0m [0mgraphTooltip         = 0
              [32m+[0m [0miteration            = 1649906886151
              [32m+[0m [0mlinks                = []
              [32m+[0m [0mliveNow              = false
              [32m+[0m [0mpanels               = [
                  [32m+[0m [0m{
                      [32m+[0m [0mcollapsed = false
                      [32m+[0m [0mgridPos   = {
                          [32m+[0m [0mh = 1
                          [32m+[0m [0mw = 24
                          [32m+[0m [0mx = 0
                          [32m+[0m [0my = 0
                        }
                      [32m+[0m [0mpanels    = []
                      [32m+[0m [0mtitle     = "overview"
                      [32m+[0m [0mtype      = "row"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mfieldConfig   = {
                          [32m+[0m [0mdefaults  = {
                              [32m+[0m [0mcolor      = {
                                  [32m+[0m [0mmode = "thresholds"
                                }
                              [32m+[0m [0mmappings   = []
                              [32m+[0m [0mthresholds = {
                                  [32m+[0m [0mmode  = "absolute"
                                  [32m+[0m [0msteps = [
                                      [32m+[0m [0m{
                                          [32m+[0m [0mcolor = "green"
                                          [32m+[0m [0mvalue = [90mnull[0m[0m
                                        },
                                      [32m+[0m [0m{
                                          [32m+[0m [0mcolor = "red"
                                          [32m+[0m [0mvalue = 80
                                        },
                                    ]
                                }
                            }
                          [32m+[0m [0moverrides = []
                        }
                      [32m+[0m [0mgridPos       = {
                          [32m+[0m [0mh = 7
                          [32m+[0m [0mw = 5
                          [32m+[0m [0mx = 0
                          [32m+[0m [0my = 1
                        }
                      [32m+[0m [0moptions       = {
                          [32m+[0m [0mcolorMode     = "value"
                          [32m+[0m [0mgraphMode     = "area"
                          [32m+[0m [0mjustifyMode   = "auto"
                          [32m+[0m [0morientation   = "auto"
                          [32m+[0m [0mreduceOptions = {
                              [32m+[0m [0mcalcs  = [
                                  [32m+[0m [0m"lastNotNull",
                                ]
                              [32m+[0m [0mfields = ""
                              [32m+[0m [0mvalues = false
                            }
                          [32m+[0m [0mtext          = {}
                          [32m+[0m [0mtextMode      = "auto"
                        }
                      [32m+[0m [0mpluginVersion = "8.3.6"
                      [32m+[0m [0mtargets       = [
                          [32m+[0m [0m{
                              [32m+[0m [0mdatasource   = {
                                  [32m+[0m [0mtype = "prometheus"
                                  [32m+[0m [0muid  = "prometheus"
                                }
                              [32m+[0m [0mexemplar     = false
                              [32m+[0m [0mexpr         = "sum(ray_cluster_active_nodes{service=\"$ray_cluster\"})"
                              [32m+[0m [0minstant      = true
                              [32m+[0m [0minterval     = ""
                              [32m+[0m [0mlegendFormat = ""
                              [32m+[0m [0mrefId        = "A"
                            },
                        ]
                      [32m+[0m [0mtitle         = "ray cluster active node"
                      [32m+[0m [0mtype          = "stat"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mfieldConfig   = {
                          [32m+[0m [0mdefaults  = {
                              [32m+[0m [0mcolor      = {
                                  [32m+[0m [0mmode = "thresholds"
                                }
                              [32m+[0m [0mdecimals   = 2
                              [32m+[0m [0mmappings   = []
                              [32m+[0m [0mmax        = 100
                              [32m+[0m [0mthresholds = {
                                  [32m+[0m [0mmode  = "absolute"
                                  [32m+[0m [0msteps = [
                                      [32m+[0m [0m{
                                          [32m+[0m [0mcolor = "green"
                                          [32m+[0m [0mvalue = [90mnull[0m[0m
                                        },
                                      [32m+[0m [0m{
                                          [32m+[0m [0mcolor = "yellow"
                                          [32m+[0m [0mvalue = 60
                                        },
                                      [32m+[0m [0m{
                                          [32m+[0m [0mcolor = "red"
                                          [32m+[0m [0mvalue = 90
                                        },
                                    ]
                                }
                              [32m+[0m [0munit       = "percent"
                            }
                          [32m+[0m [0moverrides = []
                        }
                      [32m+[0m [0mgridPos       = {
                          [32m+[0m [0mh = 7
                          [32m+[0m [0mw = 5
                          [32m+[0m [0mx = 5
                          [32m+[0m [0my = 1
                        }
                      [32m+[0m [0moptions       = {
                          [32m+[0m [0morientation          = "auto"
                          [32m+[0m [0mreduceOptions        = {
                              [32m+[0m [0mcalcs  = [
                                  [32m+[0m [0m"lastNotNull",
                                ]
                              [32m+[0m [0mfields = ""
                              [32m+[0m [0mvalues = false
                            }
                          [32m+[0m [0mshowThresholdLabels  = false
                          [32m+[0m [0mshowThresholdMarkers = true
                          [32m+[0m [0mtext                 = {}
                        }
                      [32m+[0m [0mpluginVersion = "8.3.6"
                      [32m+[0m [0mtargets       = [
                          [32m+[0m [0m{
                              [32m+[0m [0mdatasource   = {
                                  [32m+[0m [0mtype = "prometheus"
                                  [32m+[0m [0muid  = "prometheus"
                                }
                              [32m+[0m [0mexemplar     = true
                              [32m+[0m [0mexpr         = "ray_node_cpu_utilization{service=\"$ray_cluster\"}"
                              [32m+[0m [0minstant      = false
                              [32m+[0m [0minterval     = ""
                              [32m+[0m [0mlegendFormat = "{{pod}}"
                              [32m+[0m [0mrefId        = "A"
                            },
                        ]
                      [32m+[0m [0mtitle         = "node cpu utilization"
                      [32m+[0m [0mtype          = "gauge"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mfieldConfig   = {
                          [32m+[0m [0mdefaults  = {
                              [32m+[0m [0mcolor      = {
                                  [32m+[0m [0mmode = "thresholds"
                                }
                              [32m+[0m [0mdecimals   = 2
                              [32m+[0m [0mmappings   = []
                              [32m+[0m [0mmax        = 100
                              [32m+[0m [0mthresholds = {
                                  [32m+[0m [0mmode  = "absolute"
                                  [32m+[0m [0msteps = [
                                      [32m+[0m [0m{
                                          [32m+[0m [0mcolor = "green"
                                          [32m+[0m [0mvalue = [90mnull[0m[0m
                                        },
                                      [32m+[0m [0m{
                                          [32m+[0m [0mcolor = "yellow"
                                          [32m+[0m [0mvalue = 60
                                        },
                                      [32m+[0m [0m{
                                          [32m+[0m [0mcolor = "red"
                                          [32m+[0m [0mvalue = 90
                                        },
                                    ]
                                }
                              [32m+[0m [0munit       = "percent"
                            }
                          [32m+[0m [0moverrides = []
                        }
                      [32m+[0m [0mgridPos       = {
                          [32m+[0m [0mh = 7
                          [32m+[0m [0mw = 4
                          [32m+[0m [0mx = 10
                          [32m+[0m [0my = 1
                        }
                      [32m+[0m [0moptions       = {
                          [32m+[0m [0morientation          = "auto"
                          [32m+[0m [0mreduceOptions        = {
                              [32m+[0m [0mcalcs  = [
                                  [32m+[0m [0m"lastNotNull",
                                ]
                              [32m+[0m [0mfields = ""
                              [32m+[0m [0mvalues = false
                            }
                          [32m+[0m [0mshowThresholdLabels  = false
                          [32m+[0m [0mshowThresholdMarkers = true
                          [32m+[0m [0mtext                 = {}
                        }
                      [32m+[0m [0mpluginVersion = "8.3.6"
                      [32m+[0m [0mtargets       = [
                          [32m+[0m [0m{
                              [32m+[0m [0mdatasource   = {
                                  [32m+[0m [0mtype = "prometheus"
                                  [32m+[0m [0muid  = "prometheus"
                                }
                              [32m+[0m [0mexemplar     = false
                              [32m+[0m [0mexpr         = "ray_node_disk_utilization_percentage{service=\"$ray_cluster\"}"
                              [32m+[0m [0minstant      = true
                              [32m+[0m [0minterval     = ""
                              [32m+[0m [0mlegendFormat = "{{pod}}"
                              [32m+[0m [0mrefId        = "A"
                            },
                        ]
                      [32m+[0m [0mtitle         = "node disk utilization"
                      [32m+[0m [0mtype          = "gauge"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mfieldConfig   = {
                          [32m+[0m [0mdefaults  = {
                              [32m+[0m [0mcolor      = {
                                  [32m+[0m [0mmode = "thresholds"
                                }
                              [32m+[0m [0mmappings   = []
                              [32m+[0m [0mmax        = 100
                              [32m+[0m [0mthresholds = {
                                  [32m+[0m [0mmode  = "absolute"
                                  [32m+[0m [0msteps = [
                                      [32m+[0m [0m{
                                          [32m+[0m [0mcolor = "green"
                                          [32m+[0m [0mvalue = [90mnull[0m[0m
                                        },
                                      [32m+[0m [0m{
                                          [32m+[0m [0mcolor = "light-green"
                                          [32m+[0m [0mvalue = 20
                                        },
                                      [32m+[0m [0m{
                                          [32m+[0m [0mcolor = "super-light-green"
                                          [32m+[0m [0mvalue = 40
                                        },
                                      [32m+[0m [0m{
                                          [32m+[0m [0mcolor = "light-red"
                                          [32m+[0m [0mvalue = 60
                                        },
                                      [32m+[0m [0m{
                                          [32m+[0m [0mcolor = "red"
                                          [32m+[0m [0mvalue = 80
                                        },
                                    ]
                                }
                              [32m+[0m [0munit       = "percent"
                            }
                          [32m+[0m [0moverrides = []
                        }
                      [32m+[0m [0mgridPos       = {
                          [32m+[0m [0mh = 7
                          [32m+[0m [0mw = 5
                          [32m+[0m [0mx = 14
                          [32m+[0m [0my = 1
                        }
                      [32m+[0m [0minterval      = "1"
                      [32m+[0m [0moptions       = {
                          [32m+[0m [0morientation          = "auto"
                          [32m+[0m [0mreduceOptions        = {
                              [32m+[0m [0mcalcs  = [
                                  [32m+[0m [0m"lastNotNull",
                                ]
                              [32m+[0m [0mfields = ""
                              [32m+[0m [0mvalues = false
                            }
                          [32m+[0m [0mshowThresholdLabels  = false
                          [32m+[0m [0mshowThresholdMarkers = true
                        }
                      [32m+[0m [0mpluginVersion = "8.3.6"
                      [32m+[0m [0mtargets       = [
                          [32m+[0m [0m{
                              [32m+[0m [0mdatasource   = {
                                  [32m+[0m [0mtype = "prometheus"
                                  [32m+[0m [0muid  = "prometheus"
                                }
                              [32m+[0m [0mexemplar     = false
                              [32m+[0m [0mexpr         = "ray_raylet_cpu{service=\"$ray_cluster\"}"
                              [32m+[0m [0mformat       = "heatmap"
                              [32m+[0m [0minstant      = false
                              [32m+[0m [0minterval     = ""
                              [32m+[0m [0mlegendFormat = "{{pid}}"
                              [32m+[0m [0mrefId        = "A"
                            },
                        ]
                      [32m+[0m [0mtitle         = "ray raylet cpu usgae"
                      [32m+[0m [0mtype          = "gauge"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mfieldConfig   = {
                          [32m+[0m [0mdefaults  = {
                              [32m+[0m [0mcolor      = {
                                  [32m+[0m [0mmode = "thresholds"
                                }
                              [32m+[0m [0mmappings   = []
                              [32m+[0m [0mmax        = 100
                              [32m+[0m [0mthresholds = {
                                  [32m+[0m [0mmode  = "absolute"
                                  [32m+[0m [0msteps = [
                                      [32m+[0m [0m{
                                          [32m+[0m [0mcolor = "green"
                                          [32m+[0m [0mvalue = [90mnull[0m[0m
                                        },
                                      [32m+[0m [0m{
                                          [32m+[0m [0mcolor = "light-green"
                                          [32m+[0m [0mvalue = 20
                                        },
                                      [32m+[0m [0m{
                                          [32m+[0m [0mcolor = "super-light-green"
                                          [32m+[0m [0mvalue = 40
                                        },
                                      [32m+[0m [0m{
                                          [32m+[0m [0mcolor = "light-red"
                                          [32m+[0m [0mvalue = 60
                                        },
                                      [32m+[0m [0m{
                                          [32m+[0m [0mcolor = "red"
                                          [32m+[0m [0mvalue = 80
                                        },
                                    ]
                                }
                              [32m+[0m [0munit       = "percent"
                            }
                          [32m+[0m [0moverrides = []
                        }
                      [32m+[0m [0mgridPos       = {
                          [32m+[0m [0mh = 7
                          [32m+[0m [0mw = 5
                          [32m+[0m [0mx = 19
                          [32m+[0m [0my = 1
                        }
                      [32m+[0m [0minterval      = "1"
                      [32m+[0m [0moptions       = {
                          [32m+[0m [0morientation          = "auto"
                          [32m+[0m [0mreduceOptions        = {
                              [32m+[0m [0mcalcs  = [
                                  [32m+[0m [0m"lastNotNull",
                                ]
                              [32m+[0m [0mfields = ""
                              [32m+[0m [0mvalues = false
                            }
                          [32m+[0m [0mshowThresholdLabels  = false
                          [32m+[0m [0mshowThresholdMarkers = true
                        }
                      [32m+[0m [0mpluginVersion = "8.3.6"
                      [32m+[0m [0mtargets       = [
                          [32m+[0m [0m{
                              [32m+[0m [0mdatasource   = {
                                  [32m+[0m [0mtype = "prometheus"
                                  [32m+[0m [0muid  = "prometheus"
                                }
                              [32m+[0m [0mexemplar     = false
                              [32m+[0m [0mexpr         = "ray_raylet_mem{service=\"$ray_cluster\"}"
                              [32m+[0m [0mformat       = "heatmap"
                              [32m+[0m [0minstant      = false
                              [32m+[0m [0minterval     = ""
                              [32m+[0m [0mlegendFormat = "{{pid}}"
                              [32m+[0m [0mrefId        = "A"
                            },
                        ]
                      [32m+[0m [0mtitle         = "ray raylet memory usgae"
                      [32m+[0m [0mtype          = "gauge"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mcollapsed = true
                      [32m+[0m [0mgridPos   = {
                          [32m+[0m [0mh = 1
                          [32m+[0m [0mw = 24
                          [32m+[0m [0mx = 0
                          [32m+[0m [0my = 8
                        }
                      [32m+[0m [0mpanels    = [
                          [32m+[0m [0m{
                              [32m+[0m [0mfieldConfig   = {
                                  [32m+[0m [0mdefaults  = {
                                      [32m+[0m [0mcolor      = {
                                          [32m+[0m [0mmode = "palette-classic"
                                        }
                                      [32m+[0m [0mcustom     = {
                                          [32m+[0m [0maxisLabel         = ""
                                          [32m+[0m [0maxisPlacement     = "auto"
                                          [32m+[0m [0mbarAlignment      = 0
                                          [32m+[0m [0mdrawStyle         = "line"
                                          [32m+[0m [0mfillOpacity       = 0
                                          [32m+[0m [0mgradientMode      = "none"
                                          [32m+[0m [0mhideFrom          = {
                                              [32m+[0m [0mlegend  = false
                                              [32m+[0m [0mtooltip = false
                                              [32m+[0m [0mviz     = false
                                            }
                                          [32m+[0m [0mlineInterpolation = "linear"
                                          [32m+[0m [0mlineWidth         = 1
                                          [32m+[0m [0mpointSize         = 5
                                          [32m+[0m [0mscaleDistribution = {
                                              [32m+[0m [0mtype = "linear"
                                            }
                                          [32m+[0m [0mshowPoints        = "auto"
                                          [32m+[0m [0mspanNulls         = false
                                          [32m+[0m [0mstacking          = {
                                              [32m+[0m [0mgroup = "A"
                                              [32m+[0m [0mmode  = "none"
                                            }
                                          [32m+[0m [0mthresholdsStyle   = {
                                              [32m+[0m [0mmode = "off"
                                            }
                                        }
                                      [32m+[0m [0mmappings   = []
                                      [32m+[0m [0mthresholds = {
                                          [32m+[0m [0mmode  = "absolute"
                                          [32m+[0m [0msteps = [
                                              [32m+[0m [0m{
                                                  [32m+[0m [0mcolor = "green"
                                                },
                                              [32m+[0m [0m{
                                                  [32m+[0m [0mcolor = "red"
                                                  [32m+[0m [0mvalue = 80
                                                },
                                            ]
                                        }
                                    }
                                  [32m+[0m [0moverrides = []
                                }
                              [32m+[0m [0mgridPos       = {
                                  [32m+[0m [0mh = 8
                                  [32m+[0m [0mw = 12
                                  [32m+[0m [0mx = 0
                                  [32m+[0m [0my = 9
                                }
                              [32m+[0m [0mid            = 3
                              [32m+[0m [0moptions       = {
                                  [32m+[0m [0mlegend  = {
                                      [32m+[0m [0mcalcs       = []
                                      [32m+[0m [0mdisplayMode = "list"
                                      [32m+[0m [0mplacement   = "bottom"
                                    }
                                  [32m+[0m [0mtooltip = {
                                      [32m+[0m [0mmode = "single"
                                    }
                                }
                              [32m+[0m [0mpluginVersion = "8.3.6"
                              [32m+[0m [0mtargets       = [
                                  [32m+[0m [0m{
                                      [32m+[0m [0mdatasource   = {
                                          [32m+[0m [0mtype = "prometheus"
                                          [32m+[0m [0muid  = "prometheus"
                                        }
                                      [32m+[0m [0mexemplar     = false
                                      [32m+[0m [0mexpr         = "ray_gcs_actors_count{service=\"$ray_cluster\"}"
                                      [32m+[0m [0minstant      = true
                                      [32m+[0m [0minterval     = ""
                                      [32m+[0m [0mlegendFormat = ""
                                      [32m+[0m [0mrefId        = "A"
                                    },
                                ]
                              [32m+[0m [0mtitle         = "ray actors count"
                              [32m+[0m [0mtype          = "timeseries"
                            },
                          [32m+[0m [0m{
                              [32m+[0m [0mfieldConfig   = {
                                  [32m+[0m [0mdefaults  = {
                                      [32m+[0m [0mcolor      = {
                                          [32m+[0m [0mmode = "palette-classic"
                                        }
                                      [32m+[0m [0mcustom     = {
                                          [32m+[0m [0maxisLabel         = ""
                                          [32m+[0m [0maxisPlacement     = "auto"
                                          [32m+[0m [0mbarAlignment      = 0
                                          [32m+[0m [0mdrawStyle         = "line"
                                          [32m+[0m [0mfillOpacity       = 0
                                          [32m+[0m [0mgradientMode      = "none"
                                          [32m+[0m [0mhideFrom          = {
                                              [32m+[0m [0mlegend  = false
                                              [32m+[0m [0mtooltip = false
                                              [32m+[0m [0mviz     = false
                                            }
                                          [32m+[0m [0mlineInterpolation = "linear"
                                          [32m+[0m [0mlineWidth         = 1
                                          [32m+[0m [0mpointSize         = 5
                                          [32m+[0m [0mscaleDistribution = {
                                              [32m+[0m [0mtype = "linear"
                                            }
                                          [32m+[0m [0mshowPoints        = "auto"
                                          [32m+[0m [0mspanNulls         = false
                                          [32m+[0m [0mstacking          = {
                                              [32m+[0m [0mgroup = "A"
                                              [32m+[0m [0mmode  = "none"
                                            }
                                          [32m+[0m [0mthresholdsStyle   = {
                                              [32m+[0m [0mmode = "off"
                                            }
                                        }
                                      [32m+[0m [0mmappings   = []
                                      [32m+[0m [0mthresholds = {
                                          [32m+[0m [0mmode  = "absolute"
                                          [32m+[0m [0msteps = [
                                              [32m+[0m [0m{
                                                  [32m+[0m [0mcolor = "green"
                                                },
                                              [32m+[0m [0m{
                                                  [32m+[0m [0mcolor = "red"
                                                  [32m+[0m [0mvalue = 80
                                                },
                                            ]
                                        }
                                    }
                                  [32m+[0m [0moverrides = []
                                }
                              [32m+[0m [0mgridPos       = {
                                  [32m+[0m [0mh = 8
                                  [32m+[0m [0mw = 12
                                  [32m+[0m [0mx = 12
                                  [32m+[0m [0my = 9
                                }
                              [32m+[0m [0mid            = 32
                              [32m+[0m [0moptions       = {
                                  [32m+[0m [0mlegend  = {
                                      [32m+[0m [0mcalcs       = []
                                      [32m+[0m [0mdisplayMode = "list"
                                      [32m+[0m [0mplacement   = "bottom"
                                    }
                                  [32m+[0m [0mtooltip = {
                                      [32m+[0m [0mmode = "single"
                                    }
                                }
                              [32m+[0m [0mpluginVersion = "8.3.6"
                              [32m+[0m [0mtargets       = [
                                  [32m+[0m [0m{
                                      [32m+[0m [0mdatasource   = {
                                          [32m+[0m [0mtype = "prometheus"
                                          [32m+[0m [0muid  = "prometheus"
                                        }
                                      [32m+[0m [0mexemplar     = false
                                      [32m+[0m [0mexpr         = "ray_pending_actors{service=\"$ray_cluster\"}"
                                      [32m+[0m [0minstant      = true
                                      [32m+[0m [0minterval     = ""
                                      [32m+[0m [0mlegendFormat = "{{service}}"
                                      [32m+[0m [0mrefId        = "A"
                                    },
                                ]
                              [32m+[0m [0mtitle         = "ray pending actor"
                              [32m+[0m [0mtype          = "timeseries"
                            },
                        ]
                      [32m+[0m [0mtitle     = "ray actor"
                      [32m+[0m [0mtype      = "row"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mcollapsed = false
                      [32m+[0m [0mgridPos   = {
                          [32m+[0m [0mh = 1
                          [32m+[0m [0mw = 24
                          [32m+[0m [0mx = 0
                          [32m+[0m [0my = 9
                        }
                      [32m+[0m [0mpanels    = []
                      [32m+[0m [0mtitle     = "ray task"
                      [32m+[0m [0mtype      = "row"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mfieldConfig   = {
                          [32m+[0m [0mdefaults  = {
                              [32m+[0m [0mcolor      = {
                                  [32m+[0m [0mmode = "thresholds"
                                }
                              [32m+[0m [0mmappings   = []
                              [32m+[0m [0mthresholds = {
                                  [32m+[0m [0mmode  = "absolute"
                                  [32m+[0m [0msteps = [
                                      [32m+[0m [0m{
                                          [32m+[0m [0mcolor = "green"
                                          [32m+[0m [0mvalue = [90mnull[0m[0m
                                        },
                                      [32m+[0m [0m{
                                          [32m+[0m [0mcolor = "red"
                                          [32m+[0m [0mvalue = 80
                                        },
                                    ]
                                }
                            }
                          [32m+[0m [0moverrides = []
                        }
                      [32m+[0m [0mgridPos       = {
                          [32m+[0m [0mh = 8
                          [32m+[0m [0mw = 6
                          [32m+[0m [0mx = 0
                          [32m+[0m [0my = 10
                        }
                      [32m+[0m [0moptions       = {
                          [32m+[0m [0mcolorMode     = "value"
                          [32m+[0m [0mgraphMode     = "area"
                          [32m+[0m [0mjustifyMode   = "auto"
                          [32m+[0m [0morientation   = "auto"
                          [32m+[0m [0mreduceOptions = {
                              [32m+[0m [0mcalcs  = [
                                  [32m+[0m [0m"lastNotNull",
                                ]
                              [32m+[0m [0mfields = ""
                              [32m+[0m [0mvalues = false
                            }
                          [32m+[0m [0mtextMode      = "auto"
                        }
                      [32m+[0m [0mpluginVersion = "8.3.6"
                      [32m+[0m [0mtargets       = [
                          [32m+[0m [0m{
                              [32m+[0m [0mdatasource   = {
                                  [32m+[0m [0mtype = "prometheus"
                                  [32m+[0m [0muid  = "prometheus"
                                }
                              [32m+[0m [0mexemplar     = false
                              [32m+[0m [0mexpr         = "ray_internal_num_received_tasks{service=\"$ray_cluster\"}"
                              [32m+[0m [0minstant      = true
                              [32m+[0m [0minterval     = ""
                              [32m+[0m [0mlegendFormat = "{{Method}}"
                              [32m+[0m [0mrefId        = "A"
                            },
                        ]
                      [32m+[0m [0mtitle         = "ray received task"
                      [32m+[0m [0mtype          = "stat"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mfieldConfig   = {
                          [32m+[0m [0mdefaults  = {
                              [32m+[0m [0mcolor      = {
                                  [32m+[0m [0mmode = "thresholds"
                                }
                              [32m+[0m [0mmappings   = []
                              [32m+[0m [0mthresholds = {
                                  [32m+[0m [0mmode  = "absolute"
                                  [32m+[0m [0msteps = [
                                      [32m+[0m [0m{
                                          [32m+[0m [0mcolor = "green"
                                          [32m+[0m [0mvalue = [90mnull[0m[0m
                                        },
                                      [32m+[0m [0m{
                                          [32m+[0m [0mcolor = "red"
                                          [32m+[0m [0mvalue = 80
                                        },
                                    ]
                                }
                            }
                          [32m+[0m [0moverrides = []
                        }
                      [32m+[0m [0mgridPos       = {
                          [32m+[0m [0mh = 8
                          [32m+[0m [0mw = 6
                          [32m+[0m [0mx = 6
                          [32m+[0m [0my = 10
                        }
                      [32m+[0m [0moptions       = {
                          [32m+[0m [0mcolorMode     = "value"
                          [32m+[0m [0mgraphMode     = "area"
                          [32m+[0m [0mjustifyMode   = "auto"
                          [32m+[0m [0morientation   = "auto"
                          [32m+[0m [0mreduceOptions = {
                              [32m+[0m [0mcalcs  = [
                                  [32m+[0m [0m"lastNotNull",
                                ]
                              [32m+[0m [0mfields = ""
                              [32m+[0m [0mvalues = false
                            }
                          [32m+[0m [0mtextMode      = "auto"
                        }
                      [32m+[0m [0mpluginVersion = "8.3.6"
                      [32m+[0m [0mtargets       = [
                          [32m+[0m [0m{
                              [32m+[0m [0mdatasource   = {
                                  [32m+[0m [0mtype = "prometheus"
                                  [32m+[0m [0muid  = "prometheus"
                                }
                              [32m+[0m [0mexemplar     = false
                              [32m+[0m [0mexpr         = "ray_internal_num_spilled_tasks{service=\"$ray_cluster\"}"
                              [32m+[0m [0minstant      = true
                              [32m+[0m [0minterval     = ""
                              [32m+[0m [0mlegendFormat = "{{Method}}"
                              [32m+[0m [0mrefId        = "A"
                            },
                        ]
                      [32m+[0m [0mtitle         = "ray spilled task"
                      [32m+[0m [0mtype          = "stat"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mfieldConfig   = {
                          [32m+[0m [0mdefaults  = {
                              [32m+[0m [0mcolor      = {
                                  [32m+[0m [0mmode = "thresholds"
                                }
                              [32m+[0m [0mmappings   = []
                              [32m+[0m [0mthresholds = {
                                  [32m+[0m [0mmode  = "absolute"
                                  [32m+[0m [0msteps = [
                                      [32m+[0m [0m{
                                          [32m+[0m [0mcolor = "green"
                                          [32m+[0m [0mvalue = [90mnull[0m[0m
                                        },
                                      [32m+[0m [0m{
                                          [32m+[0m [0mcolor = "red"
                                          [32m+[0m [0mvalue = 80
                                        },
                                    ]
                                }
                            }
                          [32m+[0m [0moverrides = []
                        }
                      [32m+[0m [0mgridPos       = {
                          [32m+[0m [0mh = 8
                          [32m+[0m [0mw = 6
                          [32m+[0m [0mx = 12
                          [32m+[0m [0my = 10
                        }
                      [32m+[0m [0moptions       = {
                          [32m+[0m [0mcolorMode     = "value"
                          [32m+[0m [0mgraphMode     = "area"
                          [32m+[0m [0mjustifyMode   = "auto"
                          [32m+[0m [0morientation   = "auto"
                          [32m+[0m [0mreduceOptions = {
                              [32m+[0m [0mcalcs  = [
                                  [32m+[0m [0m"lastNotNull",
                                ]
                              [32m+[0m [0mfields = ""
                              [32m+[0m [0mvalues = false
                            }
                          [32m+[0m [0mtextMode      = "auto"
                        }
                      [32m+[0m [0mpluginVersion = "8.3.6"
                      [32m+[0m [0mtargets       = [
                          [32m+[0m [0m{
                              [32m+[0m [0mdatasource   = {
                                  [32m+[0m [0mtype = "prometheus"
                                  [32m+[0m [0muid  = "prometheus"
                                }
                              [32m+[0m [0mexemplar     = false
                              [32m+[0m [0mexpr         = "ray_internal_num_dispatched_tasks{service=\"$ray_cluster\"}"
                              [32m+[0m [0minstant      = true
                              [32m+[0m [0minterval     = ""
                              [32m+[0m [0mlegendFormat = "{{Method}}"
                              [32m+[0m [0mrefId        = "A"
                            },
                        ]
                      [32m+[0m [0mtitle         = "ray dispatched task"
                      [32m+[0m [0mtype          = "stat"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mfieldConfig   = {
                          [32m+[0m [0mdefaults  = {
                              [32m+[0m [0mcolor      = {
                                  [32m+[0m [0mmode = "thresholds"
                                }
                              [32m+[0m [0mmappings   = []
                              [32m+[0m [0mthresholds = {
                                  [32m+[0m [0mmode  = "absolute"
                                  [32m+[0m [0msteps = [
                                      [32m+[0m [0m{
                                          [32m+[0m [0mcolor = "green"
                                          [32m+[0m [0mvalue = [90mnull[0m[0m
                                        },
                                      [32m+[0m [0m{
                                          [32m+[0m [0mcolor = "red"
                                          [32m+[0m [0mvalue = 80
                                        },
                                    ]
                                }
                            }
                          [32m+[0m [0moverrides = []
                        }
                      [32m+[0m [0mgridPos       = {
                          [32m+[0m [0mh = 8
                          [32m+[0m [0mw = 6
                          [32m+[0m [0mx = 18
                          [32m+[0m [0my = 10
                        }
                      [32m+[0m [0moptions       = {
                          [32m+[0m [0mcolorMode     = "value"
                          [32m+[0m [0mgraphMode     = "area"
                          [32m+[0m [0mjustifyMode   = "auto"
                          [32m+[0m [0morientation   = "auto"
                          [32m+[0m [0mreduceOptions = {
                              [32m+[0m [0mcalcs  = [
                                  [32m+[0m [0m"lastNotNull",
                                ]
                              [32m+[0m [0mfields = ""
                              [32m+[0m [0mvalues = false
                            }
                          [32m+[0m [0mtextMode      = "auto"
                        }
                      [32m+[0m [0mpluginVersion = "8.3.6"
                      [32m+[0m [0mtargets       = [
                          [32m+[0m [0m{
                              [32m+[0m [0mdatasource   = {
                                  [32m+[0m [0mtype = "prometheus"
                                  [32m+[0m [0muid  = "prometheus"
                                }
                              [32m+[0m [0mexemplar     = false
                              [32m+[0m [0mexpr         = "ray_internal_num_infeasible_tasks{service=\"$ray_cluster\"}"
                              [32m+[0m [0minstant      = true
                              [32m+[0m [0minterval     = ""
                              [32m+[0m [0mlegendFormat = "{{Method}}"
                              [32m+[0m [0mrefId        = "A"
                            },
                        ]
                      [32m+[0m [0mtitle         = "ray infeasible task"
                      [32m+[0m [0mtype          = "stat"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mcollapsed = true
                      [32m+[0m [0mgridPos   = {
                          [32m+[0m [0mh = 1
                          [32m+[0m [0mw = 24
                          [32m+[0m [0mx = 0
                          [32m+[0m [0my = 18
                        }
                      [32m+[0m [0mpanels    = [
                          [32m+[0m [0m{
                              [32m+[0m [0mfieldConfig   = {
                                  [32m+[0m [0mdefaults  = {
                                      [32m+[0m [0mcolor      = {
                                          [32m+[0m [0mmode = "palette-classic"
                                        }
                                      [32m+[0m [0mcustom     = {
                                          [32m+[0m [0maxisLabel         = ""
                                          [32m+[0m [0maxisPlacement     = "auto"
                                          [32m+[0m [0mbarAlignment      = 0
                                          [32m+[0m [0mdrawStyle         = "line"
                                          [32m+[0m [0mfillOpacity       = 0
                                          [32m+[0m [0mgradientMode      = "none"
                                          [32m+[0m [0mhideFrom          = {
                                              [32m+[0m [0mlegend  = false
                                              [32m+[0m [0mtooltip = false
                                              [32m+[0m [0mviz     = false
                                            }
                                          [32m+[0m [0mlineInterpolation = "linear"
                                          [32m+[0m [0mlineWidth         = 1
                                          [32m+[0m [0mpointSize         = 5
                                          [32m+[0m [0mscaleDistribution = {
                                              [32m+[0m [0mtype = "linear"
                                            }
                                          [32m+[0m [0mshowPoints        = "auto"
                                          [32m+[0m [0mspanNulls         = false
                                          [32m+[0m [0mstacking          = {
                                              [32m+[0m [0mgroup = "A"
                                              [32m+[0m [0mmode  = "none"
                                            }
                                          [32m+[0m [0mthresholdsStyle   = {
                                              [32m+[0m [0mmode = "off"
                                            }
                                        }
                                      [32m+[0m [0mmappings   = []
                                      [32m+[0m [0mthresholds = {
                                          [32m+[0m [0mmode  = "absolute"
                                          [32m+[0m [0msteps = [
                                              [32m+[0m [0m{
                                                  [32m+[0m [0mcolor = "green"
                                                },
                                              [32m+[0m [0m{
                                                  [32m+[0m [0mcolor = "red"
                                                  [32m+[0m [0mvalue = 80
                                                },
                                            ]
                                        }
                                    }
                                  [32m+[0m [0moverrides = []
                                }
                              [32m+[0m [0mgridPos       = {
                                  [32m+[0m [0mh = 8
                                  [32m+[0m [0mw = 12
                                  [32m+[0m [0mx = 0
                                  [32m+[0m [0my = 9
                                }
                              [32m+[0m [0mid            = 5
                              [32m+[0m [0moptions       = {
                                  [32m+[0m [0mlegend  = {
                                      [32m+[0m [0mcalcs       = []
                                      [32m+[0m [0mdisplayMode = "list"
                                      [32m+[0m [0mplacement   = "bottom"
                                    }
                                  [32m+[0m [0mtooltip = {
                                      [32m+[0m [0mmode = "single"
                                    }
                                }
                              [32m+[0m [0mpluginVersion = "8.0.0"
                              [32m+[0m [0mtargets       = [
                                  [32m+[0m [0m{
                                      [32m+[0m [0mdatasource   = {
                                          [32m+[0m [0mtype = "prometheus"
                                          [32m+[0m [0muid  = "prometheus"
                                        }
                                      [32m+[0m [0mexemplar     = false
                                      [32m+[0m [0mexpr         = "ray_object_store_used_memory{service=\"$ray_cluster\"}"
                                      [32m+[0m [0minstant      = true
                                      [32m+[0m [0minterval     = ""
                                      [32m+[0m [0mlegendFormat = "{{pod}}"
                                      [32m+[0m [0mrefId        = "A"
                                    },
                                ]
                              [32m+[0m [0mtitle         = "ray cluster object store used memory"
                              [32m+[0m [0mtype          = "timeseries"
                            },
                          [32m+[0m [0m{
                              [32m+[0m [0mfieldConfig   = {
                                  [32m+[0m [0mdefaults  = {
                                      [32m+[0m [0mcolor      = {
                                          [32m+[0m [0mmode = "palette-classic"
                                        }
                                      [32m+[0m [0mcustom     = {
                                          [32m+[0m [0maxisLabel         = ""
                                          [32m+[0m [0maxisPlacement     = "auto"
                                          [32m+[0m [0mbarAlignment      = 0
                                          [32m+[0m [0mdrawStyle         = "line"
                                          [32m+[0m [0mfillOpacity       = 0
                                          [32m+[0m [0mgradientMode      = "none"
                                          [32m+[0m [0mhideFrom          = {
                                              [32m+[0m [0mlegend  = false
                                              [32m+[0m [0mtooltip = false
                                              [32m+[0m [0mviz     = false
                                            }
                                          [32m+[0m [0mlineInterpolation = "linear"
                                          [32m+[0m [0mlineWidth         = 1
                                          [32m+[0m [0mpointSize         = 5
                                          [32m+[0m [0mscaleDistribution = {
                                              [32m+[0m [0mtype = "linear"
                                            }
                                          [32m+[0m [0mshowPoints        = "auto"
                                          [32m+[0m [0mspanNulls         = false
                                          [32m+[0m [0mstacking          = {
                                              [32m+[0m [0mgroup = "A"
                                              [32m+[0m [0mmode  = "none"
                                            }
                                          [32m+[0m [0mthresholdsStyle   = {
                                              [32m+[0m [0mmode = "off"
                                            }
                                        }
                                      [32m+[0m [0mmappings   = []
                                      [32m+[0m [0mthresholds = {
                                          [32m+[0m [0mmode  = "absolute"
                                          [32m+[0m [0msteps = [
                                              [32m+[0m [0m{
                                                  [32m+[0m [0mcolor = "green"
                                                },
                                              [32m+[0m [0m{
                                                  [32m+[0m [0mcolor = "red"
                                                  [32m+[0m [0mvalue = 80
                                                },
                                            ]
                                        }
                                    }
                                  [32m+[0m [0moverrides = []
                                }
                              [32m+[0m [0mgridPos       = {
                                  [32m+[0m [0mh = 8
                                  [32m+[0m [0mw = 12
                                  [32m+[0m [0mx = 12
                                  [32m+[0m [0my = 9
                                }
                              [32m+[0m [0mid            = 20
                              [32m+[0m [0moptions       = {
                                  [32m+[0m [0mlegend  = {
                                      [32m+[0m [0mcalcs       = []
                                      [32m+[0m [0mdisplayMode = "list"
                                      [32m+[0m [0mplacement   = "bottom"
                                    }
                                  [32m+[0m [0mtooltip = {
                                      [32m+[0m [0mmode = "single"
                                    }
                                }
                              [32m+[0m [0mpluginVersion = "8.0.0"
                              [32m+[0m [0mtargets       = [
                                  [32m+[0m [0m{
                                      [32m+[0m [0mdatasource   = {
                                          [32m+[0m [0mtype = "prometheus"
                                          [32m+[0m [0muid  = "prometheus"
                                        }
                                      [32m+[0m [0mexemplar     = false
                                      [32m+[0m [0mexpr         = "ray_object_store_fallback_memory{service=\"$ray_cluster\"}"
                                      [32m+[0m [0minstant      = true
                                      [32m+[0m [0minterval     = ""
                                      [32m+[0m [0mlegendFormat = "{{pod}}"
                                      [32m+[0m [0mrefId        = "A"
                                    },
                                ]
                              [32m+[0m [0mtitle         = "ray cluster object store used memory"
                              [32m+[0m [0mtype          = "timeseries"
                            },
                          [32m+[0m [0m{
                              [32m+[0m [0mfieldConfig   = {
                                  [32m+[0m [0mdefaults  = {
                                      [32m+[0m [0mcolor      = {
                                          [32m+[0m [0mmode = "palette-classic"
                                        }
                                      [32m+[0m [0mcustom     = {
                                          [32m+[0m [0maxisLabel         = "bytes"
                                          [32m+[0m [0maxisPlacement     = "auto"
                                          [32m+[0m [0mbarAlignment      = 0
                                          [32m+[0m [0mdrawStyle         = "line"
                                          [32m+[0m [0mfillOpacity       = 0
                                          [32m+[0m [0mgradientMode      = "none"
                                          [32m+[0m [0mhideFrom          = {
                                              [32m+[0m [0mlegend  = false
                                              [32m+[0m [0mtooltip = false
                                              [32m+[0m [0mviz     = false
                                            }
                                          [32m+[0m [0mlineInterpolation = "linear"
                                          [32m+[0m [0mlineStyle         = {
                                              [32m+[0m [0mfill = "solid"
                                            }
                                          [32m+[0m [0mlineWidth         = 1
                                          [32m+[0m [0mpointSize         = 5
                                          [32m+[0m [0mscaleDistribution = {
                                              [32m+[0m [0mtype = "linear"
                                            }
                                          [32m+[0m [0mshowPoints        = "auto"
                                          [32m+[0m [0mspanNulls         = false
                                          [32m+[0m [0mstacking          = {
                                              [32m+[0m [0mgroup = "A"
                                              [32m+[0m [0mmode  = "normal"
                                            }
                                          [32m+[0m [0mthresholdsStyle   = {
                                              [32m+[0m [0mmode = "off"
                                            }
                                        }
                                      [32m+[0m [0mdecimals   = 0
                                      [32m+[0m [0mmappings   = []
                                      [32m+[0m [0mmin        = -2
                                      [32m+[0m [0mthresholds = {
                                          [32m+[0m [0mmode  = "absolute"
                                          [32m+[0m [0msteps = [
                                              [32m+[0m [0m{
                                                  [32m+[0m [0mcolor = "green"
                                                },
                                              [32m+[0m [0m{
                                                  [32m+[0m [0mcolor = "light-green"
                                                  [32m+[0m [0mvalue = 20
                                                },
                                              [32m+[0m [0m{
                                                  [32m+[0m [0mcolor = "super-light-green"
                                                  [32m+[0m [0mvalue = 40
                                                },
                                              [32m+[0m [0m{
                                                  [32m+[0m [0mcolor = "light-red"
                                                  [32m+[0m [0mvalue = 60
                                                },
                                              [32m+[0m [0m{
                                                  [32m+[0m [0mcolor = "red"
                                                  [32m+[0m [0mvalue = 80
                                                },
                                            ]
                                        }
                                    }
                                  [32m+[0m [0moverrides = []
                                }
                              [32m+[0m [0mgridPos       = {
                                  [32m+[0m [0mh = 8
                                  [32m+[0m [0mw = 12
                                  [32m+[0m [0mx = 0
                                  [32m+[0m [0my = 17
                                }
                              [32m+[0m [0mid            = 14
                              [32m+[0m [0minterval      = "1"
                              [32m+[0m [0moptions       = {
                                  [32m+[0m [0mlegend  = {
                                      [32m+[0m [0mcalcs       = []
                                      [32m+[0m [0mdisplayMode = "list"
                                      [32m+[0m [0mplacement   = "bottom"
                                    }
                                  [32m+[0m [0mtooltip = {
                                      [32m+[0m [0mmode = "single"
                                    }
                                }
                              [32m+[0m [0mpluginVersion = "8.3.6"
                              [32m+[0m [0mtargets       = [
                                  [32m+[0m [0m{
                                      [32m+[0m [0mdatasource   = {
                                          [32m+[0m [0mtype = "prometheus"
                                          [32m+[0m [0muid  = "prometheus"
                                        }
                                      [32m+[0m [0mexemplar     = false
                                      [32m+[0m [0mexpr         = "ray_object_store_available_memory{service=\"$ray_cluster\"}"
                                      [32m+[0m [0mformat       = "time_series"
                                      [32m+[0m [0minterval     = ""
                                      [32m+[0m [0mlegendFormat = ""
                                      [32m+[0m [0mrefId        = "A"
                                    },
                                ]
                              [32m+[0m [0mtitle         = "ray object store available memory"
                              [32m+[0m [0mtype          = "timeseries"
                            },
                          [32m+[0m [0m{
                              [32m+[0m [0mfieldConfig   = {
                                  [32m+[0m [0mdefaults  = {
                                      [32m+[0m [0mcolor      = {
                                          [32m+[0m [0mmode = "palette-classic"
                                        }
                                      [32m+[0m [0mcustom     = {
                                          [32m+[0m [0maxisLabel         = ""
                                          [32m+[0m [0maxisPlacement     = "auto"
                                          [32m+[0m [0mbarAlignment      = 0
                                          [32m+[0m [0mdrawStyle         = "line"
                                          [32m+[0m [0mfillOpacity       = 0
                                          [32m+[0m [0mgradientMode      = "none"
                                          [32m+[0m [0mhideFrom          = {
                                              [32m+[0m [0mlegend  = false
                                              [32m+[0m [0mtooltip = false
                                              [32m+[0m [0mviz     = false
                                            }
                                          [32m+[0m [0mlineInterpolation = "linear"
                                          [32m+[0m [0mlineWidth         = 1
                                          [32m+[0m [0mpointSize         = 5
                                          [32m+[0m [0mscaleDistribution = {
                                              [32m+[0m [0mtype = "linear"
                                            }
                                          [32m+[0m [0mshowPoints        = "auto"
                                          [32m+[0m [0mspanNulls         = false
                                          [32m+[0m [0mstacking          = {
                                              [32m+[0m [0mgroup = "A"
                                              [32m+[0m [0mmode  = "none"
                                            }
                                          [32m+[0m [0mthresholdsStyle   = {
                                              [32m+[0m [0mmode = "off"
                                            }
                                        }
                                      [32m+[0m [0mdecimals   = 0
                                      [32m+[0m [0mmappings   = []
                                      [32m+[0m [0mmin        = 0
                                      [32m+[0m [0mthresholds = {
                                          [32m+[0m [0mmode  = "percentage"
                                          [32m+[0m [0msteps = [
                                              [32m+[0m [0m{
                                                  [32m+[0m [0mcolor = "green"
                                                },
                                              [32m+[0m [0m{
                                                  [32m+[0m [0mcolor = "light-green"
                                                  [32m+[0m [0mvalue = 20
                                                },
                                              [32m+[0m [0m{
                                                  [32m+[0m [0mcolor = "super-light-green"
                                                  [32m+[0m [0mvalue = 40
                                                },
                                              [32m+[0m [0m{
                                                  [32m+[0m [0mcolor = "#EF843C"
                                                  [32m+[0m [0mvalue = 60
                                                },
                                              [32m+[0m [0m{
                                                  [32m+[0m [0mcolor = "#E24D42"
                                                  [32m+[0m [0mvalue = 100
                                                },
                                            ]
                                        }
                                    }
                                  [32m+[0m [0moverrides = []
                                }
                              [32m+[0m [0mgridPos       = {
                                  [32m+[0m [0mh = 8
                                  [32m+[0m [0mw = 12
                                  [32m+[0m [0mx = 12
                                  [32m+[0m [0my = 17
                                }
                              [32m+[0m [0mid            = 15
                              [32m+[0m [0minterval      = "1"
                              [32m+[0m [0moptions       = {
                                  [32m+[0m [0mlegend  = {
                                      [32m+[0m [0mcalcs       = []
                                      [32m+[0m [0mdisplayMode = "list"
                                      [32m+[0m [0mplacement   = "bottom"
                                    }
                                  [32m+[0m [0mtooltip = {
                                      [32m+[0m [0mmode = "single"
                                    }
                                }
                              [32m+[0m [0mpluginVersion = "8.3.6"
                              [32m+[0m [0mtargets       = [
                                  [32m+[0m [0m{
                                      [32m+[0m [0mdatasource   = {
                                          [32m+[0m [0mtype = "prometheus"
                                          [32m+[0m [0muid  = "prometheus"
                                        }
                                      [32m+[0m [0mexemplar     = false
                                      [32m+[0m [0mexpr         = "ray_object_store_num_local_objects{service=\"$ray_cluster\"}"
                                      [32m+[0m [0mformat       = "heatmap"
                                      [32m+[0m [0minterval     = ""
                                      [32m+[0m [0mlegendFormat = "{{service}}"
                                      [32m+[0m [0mrefId        = "A"
                                    },
                                ]
                              [32m+[0m [0mtitle         = "ray local object"
                              [32m+[0m [0mtype          = "timeseries"
                            },
                        ]
                      [32m+[0m [0mtitle     = "object storage"
                      [32m+[0m [0mtype      = "row"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mcollapsed = true
                      [32m+[0m [0mgridPos   = {
                          [32m+[0m [0mh = 1
                          [32m+[0m [0mw = 24
                          [32m+[0m [0mx = 0
                          [32m+[0m [0my = 19
                        }
                      [32m+[0m [0mpanels    = [
                          [32m+[0m [0m{
                              [32m+[0m [0mfieldConfig   = {
                                  [32m+[0m [0mdefaults  = {
                                      [32m+[0m [0mcolor      = {
                                          [32m+[0m [0mmode = "thresholds"
                                        }
                                      [32m+[0m [0mmappings   = []
                                      [32m+[0m [0mthresholds = {
                                          [32m+[0m [0mmode  = "absolute"
                                          [32m+[0m [0msteps = [
                                              [32m+[0m [0m{
                                                  [32m+[0m [0mcolor = "green"
                                                },
                                              [32m+[0m [0m{
                                                  [32m+[0m [0mcolor = "light-green"
                                                  [32m+[0m [0mvalue = 20
                                                },
                                              [32m+[0m [0m{
                                                  [32m+[0m [0mcolor = "super-light-green"
                                                  [32m+[0m [0mvalue = 40
                                                },
                                              [32m+[0m [0m{
                                                  [32m+[0m [0mcolor = "light-red"
                                                  [32m+[0m [0mvalue = 60
                                                },
                                              [32m+[0m [0m{
                                                  [32m+[0m [0mcolor = "red"
                                                  [32m+[0m [0mvalue = 80
                                                },
                                            ]
                                        }
                                    }
                                  [32m+[0m [0moverrides = []
                                }
                              [32m+[0m [0mgridPos       = {
                                  [32m+[0m [0mh = 8
                                  [32m+[0m [0mw = 12
                                  [32m+[0m [0mx = 0
                                  [32m+[0m [0my = 10
                                }
                              [32m+[0m [0mid            = 9
                              [32m+[0m [0minterval      = "1"
                              [32m+[0m [0moptions       = {
                                  [32m+[0m [0mdisplayMode   = "gradient"
                                  [32m+[0m [0morientation   = "auto"
                                  [32m+[0m [0mreduceOptions = {
                                      [32m+[0m [0mcalcs  = [
                                          [32m+[0m [0m"lastNotNull",
                                        ]
                                      [32m+[0m [0mfields = ""
                                      [32m+[0m [0mvalues = false
                                    }
                                  [32m+[0m [0mshowUnfilled  = true
                                  [32m+[0m [0mtext          = {}
                                }
                              [32m+[0m [0mpluginVersion = "8.3.6"
                              [32m+[0m [0mtargets       = [
                                  [32m+[0m [0m{
                                      [32m+[0m [0mdatasource   = {
                                          [32m+[0m [0mtype = "prometheus"
                                          [32m+[0m [0muid  = "prometheus"
                                        }
                                      [32m+[0m [0mexemplar     = false
                                      [32m+[0m [0mexpr         = "ray_gcs_update_resource_usage_time_bucket{service=\"$ray_cluster\"}"
                                      [32m+[0m [0mformat       = "heatmap"
                                      [32m+[0m [0minstant      = true
                                      [32m+[0m [0minterval     = ""
                                      [32m+[0m [0mlegendFormat = "{{le}}"
                                      [32m+[0m [0mrefId        = "A"
                                    },
                                ]
                              [32m+[0m [0mtitle         = "ray gcs resouce creation latency"
                              [32m+[0m [0mtype          = "bargauge"
                            },
                          [32m+[0m [0m{
                              [32m+[0m [0mfieldConfig   = {
                                  [32m+[0m [0mdefaults  = {
                                      [32m+[0m [0mcolor      = {
                                          [32m+[0m [0mmode = "thresholds"
                                        }
                                      [32m+[0m [0mmappings   = []
                                      [32m+[0m [0mthresholds = {
                                          [32m+[0m [0mmode  = "percentage"
                                          [32m+[0m [0msteps = [
                                              [32m+[0m [0m{
                                                  [32m+[0m [0mcolor = "green"
                                                },
                                              [32m+[0m [0m{
                                                  [32m+[0m [0mcolor = "red"
                                                  [32m+[0m [0mvalue = 80
                                                },
                                            ]
                                        }
                                    }
                                  [32m+[0m [0moverrides = []
                                }
                              [32m+[0m [0mgridPos       = {
                                  [32m+[0m [0mh = 8
                                  [32m+[0m [0mw = 12
                                  [32m+[0m [0mx = 12
                                  [32m+[0m [0my = 10
                                }
                              [32m+[0m [0mid            = 23
                              [32m+[0m [0minterval      = "1"
                              [32m+[0m [0moptions       = {
                                  [32m+[0m [0mdisplayMode   = "gradient"
                                  [32m+[0m [0morientation   = "horizontal"
                                  [32m+[0m [0mreduceOptions = {
                                      [32m+[0m [0mcalcs  = [
                                          [32m+[0m [0m"lastNotNull",
                                        ]
                                      [32m+[0m [0mfields = ""
                                      [32m+[0m [0mvalues = false
                                    }
                                  [32m+[0m [0mshowUnfilled  = true
                                }
                              [32m+[0m [0mpluginVersion = "8.3.6"
                              [32m+[0m [0mtargets       = [
                                  [32m+[0m [0m{
                                      [32m+[0m [0mdatasource   = {
                                          [32m+[0m [0mtype = "prometheus"
                                          [32m+[0m [0muid  = "prometheus"
                                        }
                                      [32m+[0m [0mexemplar     = false
                                      [32m+[0m [0mexpr         = "ray_gcs_latency_bucket{service=\"$ray_cluster\"}"
                                      [32m+[0m [0mformat       = "heatmap"
                                      [32m+[0m [0minterval     = ""
                                      [32m+[0m [0mlegendFormat = "{{le}}"
                                      [32m+[0m [0mrefId        = "A"
                                    },
                                ]
                              [32m+[0m [0mtitle         = "ray gcs operation latency bucket"
                              [32m+[0m [0mtype          = "bargauge"
                            },
                        ]
                      [32m+[0m [0mtitle     = "gcs"
                      [32m+[0m [0mtype      = "row"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mcollapsed = true
                      [32m+[0m [0mgridPos   = {
                          [32m+[0m [0mh = 1
                          [32m+[0m [0mw = 24
                          [32m+[0m [0mx = 0
                          [32m+[0m [0my = 20
                        }
                      [32m+[0m [0mpanels    = [
                          [32m+[0m [0m{
                              [32m+[0m [0mfieldConfig   = {
                                  [32m+[0m [0mdefaults  = {
                                      [32m+[0m [0mcolor      = {
                                          [32m+[0m [0mmode = "thresholds"
                                        }
                                      [32m+[0m [0mmappings   = []
                                      [32m+[0m [0mthresholds = {
                                          [32m+[0m [0mmode  = "percentage"
                                          [32m+[0m [0msteps = [
                                              [32m+[0m [0m{
                                                  [32m+[0m [0mcolor = "green"
                                                },
                                              [32m+[0m [0m{
                                                  [32m+[0m [0mcolor = "red"
                                                  [32m+[0m [0mvalue = 80
                                                },
                                            ]
                                        }
                                    }
                                  [32m+[0m [0moverrides = []
                                }
                              [32m+[0m [0mgridPos       = {
                                  [32m+[0m [0mh = 8
                                  [32m+[0m [0mw = 12
                                  [32m+[0m [0mx = 0
                                  [32m+[0m [0my = 29
                                }
                              [32m+[0m [0mid            = 24
                              [32m+[0m [0minterval      = "1"
                              [32m+[0m [0moptions       = {
                                  [32m+[0m [0mdisplayMode   = "gradient"
                                  [32m+[0m [0morientation   = "auto"
                                  [32m+[0m [0mreduceOptions = {
                                      [32m+[0m [0mcalcs  = [
                                          [32m+[0m [0m"lastNotNull",
                                        ]
                                      [32m+[0m [0mfields = ""
                                      [32m+[0m [0mvalues = false
                                    }
                                  [32m+[0m [0mshowUnfilled  = true
                                }
                              [32m+[0m [0mpluginVersion = "8.3.6"
                              [32m+[0m [0mtargets       = [
                                  [32m+[0m [0m{
                                      [32m+[0m [0mdatasource   = {
                                          [32m+[0m [0mtype = "prometheus"
                                          [32m+[0m [0muid  = "prometheus"
                                        }
                                      [32m+[0m [0mexemplar     = false
                                      [32m+[0m [0mexpr         = "ray_placement_group_resource_persist_latency_ms_bucket{service=\"$ray_cluster\"}"
                                      [32m+[0m [0mformat       = "heatmap"
                                      [32m+[0m [0minstant      = true
                                      [32m+[0m [0minterval     = ""
                                      [32m+[0m [0mlegendFormat = "{{le}}"
                                      [32m+[0m [0mrefId        = "A"
                                    },
                                ]
                              [32m+[0m [0mtitle         = "ray placement group resource persist latency"
                              [32m+[0m [0mtype          = "bargauge"
                            },
                          [32m+[0m [0m{
                              [32m+[0m [0mfieldConfig   = {
                                  [32m+[0m [0mdefaults  = {
                                      [32m+[0m [0mcolor      = {
                                          [32m+[0m [0mmode = "thresholds"
                                        }
                                      [32m+[0m [0mmappings   = []
                                      [32m+[0m [0mthresholds = {
                                          [32m+[0m [0mmode  = "absolute"
                                          [32m+[0m [0msteps = [
                                              [32m+[0m [0m{
                                                  [32m+[0m [0mcolor = "green"
                                                },
                                              [32m+[0m [0m{
                                                  [32m+[0m [0mcolor = "red"
                                                  [32m+[0m [0mvalue = 80
                                                },
                                            ]
                                        }
                                    }
                                  [32m+[0m [0moverrides = []
                                }
                              [32m+[0m [0mgridPos       = {
                                  [32m+[0m [0mh = 8
                                  [32m+[0m [0mw = 6
                                  [32m+[0m [0mx = 12
                                  [32m+[0m [0my = 29
                                }
                              [32m+[0m [0mid            = 4
                              [32m+[0m [0moptions       = {
                                  [32m+[0m [0mcolorMode     = "value"
                                  [32m+[0m [0mgraphMode     = "area"
                                  [32m+[0m [0mjustifyMode   = "auto"
                                  [32m+[0m [0morientation   = "auto"
                                  [32m+[0m [0mreduceOptions = {
                                      [32m+[0m [0mcalcs  = [
                                          [32m+[0m [0m"lastNotNull",
                                        ]
                                      [32m+[0m [0mfields = ""
                                      [32m+[0m [0mvalues = false
                                    }
                                  [32m+[0m [0mtext          = {}
                                  [32m+[0m [0mtextMode      = "auto"
                                }
                              [32m+[0m [0mpluginVersion = "8.3.6"
                              [32m+[0m [0mtargets       = [
                                  [32m+[0m [0m{
                                      [32m+[0m [0mdatasource   = {
                                          [32m+[0m [0mtype = "prometheus"
                                          [32m+[0m [0muid  = "prometheus"
                                        }
                                      [32m+[0m [0mexemplar     = true
                                      [32m+[0m [0mexpr         = "sum(ray_gcs_placement_group_count{service=\"$ray_cluster\"})"
                                      [32m+[0m [0minterval     = ""
                                      [32m+[0m [0mlegendFormat = ""
                                      [32m+[0m [0mrefId        = "A"
                                    },
                                ]
                              [32m+[0m [0mtitle         = "ray cluster placement group"
                              [32m+[0m [0mtype          = "stat"
                            },
                          [32m+[0m [0m{
                              [32m+[0m [0mfieldConfig   = {
                                  [32m+[0m [0mdefaults  = {
                                      [32m+[0m [0mcolor      = {
                                          [32m+[0m [0mmode = "thresholds"
                                        }
                                      [32m+[0m [0mmappings   = []
                                      [32m+[0m [0mthresholds = {
                                          [32m+[0m [0mmode  = "absolute"
                                          [32m+[0m [0msteps = [
                                              [32m+[0m [0m{
                                                  [32m+[0m [0mcolor = "green"
                                                },
                                              [32m+[0m [0m{
                                                  [32m+[0m [0mcolor = "light-green"
                                                  [32m+[0m [0mvalue = 20
                                                },
                                              [32m+[0m [0m{
                                                  [32m+[0m [0mcolor = "super-light-green"
                                                  [32m+[0m [0mvalue = 40
                                                },
                                              [32m+[0m [0m{
                                                  [32m+[0m [0mcolor = "light-red"
                                                  [32m+[0m [0mvalue = 60
                                                },
                                              [32m+[0m [0m{
                                                  [32m+[0m [0mcolor = "red"
                                                  [32m+[0m [0mvalue = 80
                                                },
                                            ]
                                        }
                                    }
                                  [32m+[0m [0moverrides = []
                                }
                              [32m+[0m [0mgridPos       = {
                                  [32m+[0m [0mh = 8
                                  [32m+[0m [0mw = 6
                                  [32m+[0m [0mx = 18
                                  [32m+[0m [0my = 29
                                }
                              [32m+[0m [0mid            = 11
                              [32m+[0m [0minterval      = "1"
                              [32m+[0m [0moptions       = {
                                  [32m+[0m [0mcolorMode     = "value"
                                  [32m+[0m [0mgraphMode     = "area"
                                  [32m+[0m [0mjustifyMode   = "auto"
                                  [32m+[0m [0morientation   = "auto"
                                  [32m+[0m [0mreduceOptions = {
                                      [32m+[0m [0mcalcs  = [
                                          [32m+[0m [0m"lastNotNull",
                                        ]
                                      [32m+[0m [0mfields = ""
                                      [32m+[0m [0mvalues = false
                                    }
                                  [32m+[0m [0mtextMode      = "auto"
                                }
                              [32m+[0m [0mpluginVersion = "8.3.6"
                              [32m+[0m [0mtargets       = [
                                  [32m+[0m [0m{
                                      [32m+[0m [0mdatasource   = {
                                          [32m+[0m [0mtype = "prometheus"
                                          [32m+[0m [0muid  = "prometheus"
                                        }
                                      [32m+[0m [0mexemplar     = true
                                      [32m+[0m [0mexpr         = "ray_infeasible_placement_group{service=\"$ray_cluster\"}"
                                      [32m+[0m [0mformat       = "time_series"
                                      [32m+[0m [0minterval     = ""
                                      [32m+[0m [0mlegendFormat = "{{service}}"
                                      [32m+[0m [0mrefId        = "A"
                                    },
                                ]
                              [32m+[0m [0mtitle         = "ray infeasible placementGroup"
                              [32m+[0m [0mtype          = "stat"
                            },
                        ]
                      [32m+[0m [0mtitle     = "placement_group"
                      [32m+[0m [0mtype      = "row"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mcollapsed = true
                      [32m+[0m [0mgridPos   = {
                          [32m+[0m [0mh = 1
                          [32m+[0m [0mw = 24
                          [32m+[0m [0mx = 0
                          [32m+[0m [0my = 21
                        }
                      [32m+[0m [0mpanels    = [
                          [32m+[0m [0m{
                              [32m+[0m [0mfieldConfig   = {
                                  [32m+[0m [0mdefaults  = {
                                      [32m+[0m [0mcolor      = {
                                          [32m+[0m [0mmode = "palette-classic"
                                        }
                                      [32m+[0m [0mcustom     = {
                                          [32m+[0m [0maxisLabel         = "ms"
                                          [32m+[0m [0maxisPlacement     = "auto"
                                          [32m+[0m [0mbarAlignment      = 0
                                          [32m+[0m [0mdrawStyle         = "line"
                                          [32m+[0m [0mfillOpacity       = 0
                                          [32m+[0m [0mgradientMode      = "none"
                                          [32m+[0m [0mhideFrom          = {
                                              [32m+[0m [0mlegend  = false
                                              [32m+[0m [0mtooltip = false
                                              [32m+[0m [0mviz     = false
                                            }
                                          [32m+[0m [0mlineInterpolation = "linear"
                                          [32m+[0m [0mlineWidth         = 1
                                          [32m+[0m [0mpointSize         = 5
                                          [32m+[0m [0mscaleDistribution = {
                                              [32m+[0m [0mtype = "linear"
                                            }
                                          [32m+[0m [0mshowPoints        = "auto"
                                          [32m+[0m [0mspanNulls         = false
                                          [32m+[0m [0mstacking          = {
                                              [32m+[0m [0mgroup = "A"
                                              [32m+[0m [0mmode  = "none"
                                            }
                                          [32m+[0m [0mthresholdsStyle   = {
                                              [32m+[0m [0mmode = "off"
                                            }
                                        }
                                      [32m+[0m [0mmappings   = []
                                      [32m+[0m [0mthresholds = {
                                          [32m+[0m [0mmode  = "absolute"
                                          [32m+[0m [0msteps = [
                                              [32m+[0m [0m{
                                                  [32m+[0m [0mcolor = "green"
                                                },
                                              [32m+[0m [0m{
                                                  [32m+[0m [0mcolor = "light-green"
                                                  [32m+[0m [0mvalue = 20
                                                },
                                              [32m+[0m [0m{
                                                  [32m+[0m [0mcolor = "super-light-green"
                                                  [32m+[0m [0mvalue = 40
                                                },
                                              [32m+[0m [0m{
                                                  [32m+[0m [0mcolor = "light-red"
                                                  [32m+[0m [0mvalue = 60
                                                },
                                              [32m+[0m [0m{
                                                  [32m+[0m [0mcolor = "red"
                                                  [32m+[0m [0mvalue = 80
                                                },
                                            ]
                                        }
                                    }
                                  [32m+[0m [0moverrides = []
                                }
                              [32m+[0m [0mgridPos       = {
                                  [32m+[0m [0mh = 8
                                  [32m+[0m [0mw = 12
                                  [32m+[0m [0mx = 0
                                  [32m+[0m [0my = 38
                                }
                              [32m+[0m [0mid            = 10
                              [32m+[0m [0minterval      = "1"
                              [32m+[0m [0moptions       = {
                                  [32m+[0m [0mlegend  = {
                                      [32m+[0m [0mcalcs       = []
                                      [32m+[0m [0mdisplayMode = "list"
                                      [32m+[0m [0mplacement   = "bottom"
                                    }
                                  [32m+[0m [0mtooltip = {
                                      [32m+[0m [0mmode = "single"
                                    }
                                }
                              [32m+[0m [0mpluginVersion = "8.0.0"
                              [32m+[0m [0mtargets       = [
                                  [32m+[0m [0m{
                                      [32m+[0m [0mdatasource   = {
                                          [32m+[0m [0mtype = "prometheus"
                                          [32m+[0m [0muid  = "prometheus"
                                        }
                                      [32m+[0m [0mexemplar     = true
                                      [32m+[0m [0mexpr         = "ray_grpc_server_req_process_time_ms{service=\"$ray_cluster\"}"
                                      [32m+[0m [0mformat       = "time_series"
                                      [32m+[0m [0minterval     = ""
                                      [32m+[0m [0mlegendFormat = "{{Method}}"
                                      [32m+[0m [0mrefId        = "A"
                                    },
                                ]
                              [32m+[0m [0mtitle         = "ray grpc process time"
                              [32m+[0m [0mtype          = "timeseries"
                            },
                          [32m+[0m [0m{
                              [32m+[0m [0mfieldConfig   = {
                                  [32m+[0m [0mdefaults  = {
                                      [32m+[0m [0mcolor      = {
                                          [32m+[0m [0mmode = "continuous-YlRd"
                                        }
                                      [32m+[0m [0mmappings   = []
                                      [32m+[0m [0mthresholds = {
                                          [32m+[0m [0mmode  = "absolute"
                                          [32m+[0m [0msteps = [
                                              [32m+[0m [0m{
                                                  [32m+[0m [0mcolor = "green"
                                                },
                                              [32m+[0m [0m{
                                                  [32m+[0m [0mcolor = "light-green"
                                                  [32m+[0m [0mvalue = 20
                                                },
                                              [32m+[0m [0m{
                                                  [32m+[0m [0mcolor = "super-light-green"
                                                  [32m+[0m [0mvalue = 40
                                                },
                                              [32m+[0m [0m{
                                                  [32m+[0m [0mcolor = "light-red"
                                                  [32m+[0m [0mvalue = 60
                                                },
                                              [32m+[0m [0m{
                                                  [32m+[0m [0mcolor = "red"
                                                  [32m+[0m [0mvalue = 80
                                                },
                                            ]
                                        }
                                    }
                                  [32m+[0m [0moverrides = []
                                }
                              [32m+[0m [0mgridPos       = {
                                  [32m+[0m [0mh = 8
                                  [32m+[0m [0mw = 12
                                  [32m+[0m [0mx = 12
                                  [32m+[0m [0my = 38
                                }
                              [32m+[0m [0mid            = 30
                              [32m+[0m [0minterval      = "1"
                              [32m+[0m [0moptions       = {
                                  [32m+[0m [0mdisplayMode   = "lcd"
                                  [32m+[0m [0morientation   = "horizontal"
                                  [32m+[0m [0mreduceOptions = {
                                      [32m+[0m [0mcalcs  = [
                                          [32m+[0m [0m"lastNotNull",
                                        ]
                                      [32m+[0m [0mfields = ""
                                      [32m+[0m [0mvalues = false
                                    }
                                  [32m+[0m [0mshowUnfilled  = true
                                }
                              [32m+[0m [0mpluginVersion = "8.3.6"
                              [32m+[0m [0mtargets       = [
                                  [32m+[0m [0m{
                                      [32m+[0m [0mdatasource   = {
                                          [32m+[0m [0mtype = "prometheus"
                                          [32m+[0m [0muid  = "prometheus"
                                        }
                                      [32m+[0m [0mexemplar     = false
                                      [32m+[0m [0mexpr         = "abs(ray_grpc_server_req_new_total{service=\"$ray_cluster\"})"
                                      [32m+[0m [0mformat       = "time_series"
                                      [32m+[0m [0minstant      = true
                                      [32m+[0m [0minterval     = ""
                                      [32m+[0m [0mlegendFormat = "{{Method}}"
                                      [32m+[0m [0mrefId        = "A"
                                    },
                                ]
                              [32m+[0m [0mtitle         = "ray grpc finishied total amount"
                              [32m+[0m [0mtype          = "bargauge"
                            },
                          [32m+[0m [0m{
                              [32m+[0m [0mfieldConfig   = {
                                  [32m+[0m [0mdefaults  = {
                                      [32m+[0m [0mcolor      = {
                                          [32m+[0m [0mmode = "continuous-YlRd"
                                        }
                                      [32m+[0m [0mmappings   = []
                                      [32m+[0m [0mthresholds = {
                                          [32m+[0m [0mmode  = "absolute"
                                          [32m+[0m [0msteps = [
                                              [32m+[0m [0m{
                                                  [32m+[0m [0mcolor = "green"
                                                },
                                              [32m+[0m [0m{
                                                  [32m+[0m [0mcolor = "light-green"
                                                  [32m+[0m [0mvalue = 20
                                                },
                                              [32m+[0m [0m{
                                                  [32m+[0m [0mcolor = "super-light-green"
                                                  [32m+[0m [0mvalue = 40
                                                },
                                              [32m+[0m [0m{
                                                  [32m+[0m [0mcolor = "light-red"
                                                  [32m+[0m [0mvalue = 60
                                                },
                                              [32m+[0m [0m{
                                                  [32m+[0m [0mcolor = "red"
                                                  [32m+[0m [0mvalue = 80
                                                },
                                            ]
                                        }
                                    }
                                  [32m+[0m [0moverrides = []
                                }
                              [32m+[0m [0mgridPos       = {
                                  [32m+[0m [0mh = 8
                                  [32m+[0m [0mw = 12
                                  [32m+[0m [0mx = 0
                                  [32m+[0m [0my = 46
                                }
                              [32m+[0m [0mid            = 31
                              [32m+[0m [0minterval      = "1"
                              [32m+[0m [0moptions       = {
                                  [32m+[0m [0mdisplayMode   = "lcd"
                                  [32m+[0m [0morientation   = "horizontal"
                                  [32m+[0m [0mreduceOptions = {
                                      [32m+[0m [0mcalcs  = [
                                          [32m+[0m [0m"lastNotNull",
                                        ]
                                      [32m+[0m [0mfields = ""
                                      [32m+[0m [0mvalues = false
                                    }
                                  [32m+[0m [0mshowUnfilled  = true
                                }
                              [32m+[0m [0mpluginVersion = "8.3.6"
                              [32m+[0m [0mtargets       = [
                                  [32m+[0m [0m{
                                      [32m+[0m [0mdatasource   = {
                                          [32m+[0m [0mtype = "prometheus"
                                          [32m+[0m [0muid  = "prometheus"
                                        }
                                      [32m+[0m [0mexemplar     = false
                                      [32m+[0m [0mexpr         = "abs(ray_grpc_server_req_handling_total{service=\"$ray_cluster\"})"
                                      [32m+[0m [0mformat       = "time_series"
                                      [32m+[0m [0minstant      = true
                                      [32m+[0m [0minterval     = ""
                                      [32m+[0m [0mlegendFormat = "{{Method}}"
                                      [32m+[0m [0mrefId        = "A"
                                    },
                                ]
                              [32m+[0m [0mtitle         = "ray grpc finishied total amount"
                              [32m+[0m [0mtype          = "bargauge"
                            },
                          [32m+[0m [0m{
                              [32m+[0m [0mfieldConfig   = {
                                  [32m+[0m [0mdefaults  = {
                                      [32m+[0m [0mcolor      = {
                                          [32m+[0m [0mmode = "continuous-YlRd"
                                        }
                                      [32m+[0m [0mmappings   = []
                                      [32m+[0m [0mthresholds = {
                                          [32m+[0m [0mmode  = "absolute"
                                          [32m+[0m [0msteps = [
                                              [32m+[0m [0m{
                                                  [32m+[0m [0mcolor = "green"
                                                },
                                              [32m+[0m [0m{
                                                  [32m+[0m [0mcolor = "light-green"
                                                  [32m+[0m [0mvalue = 20
                                                },
                                              [32m+[0m [0m{
                                                  [32m+[0m [0mcolor = "super-light-green"
                                                  [32m+[0m [0mvalue = 40
                                                },
                                              [32m+[0m [0m{
                                                  [32m+[0m [0mcolor = "light-red"
                                                  [32m+[0m [0mvalue = 60
                                                },
                                              [32m+[0m [0m{
                                                  [32m+[0m [0mcolor = "red"
                                                  [32m+[0m [0mvalue = 80
                                                },
                                            ]
                                        }
                                    }
                                  [32m+[0m [0moverrides = []
                                }
                              [32m+[0m [0mgridPos       = {
                                  [32m+[0m [0mh = 8
                                  [32m+[0m [0mw = 12
                                  [32m+[0m [0mx = 12
                                  [32m+[0m [0my = 46
                                }
                              [32m+[0m [0mid            = 29
                              [32m+[0m [0minterval      = "1"
                              [32m+[0m [0moptions       = {
                                  [32m+[0m [0mdisplayMode   = "lcd"
                                  [32m+[0m [0morientation   = "horizontal"
                                  [32m+[0m [0mreduceOptions = {
                                      [32m+[0m [0mcalcs  = [
                                          [32m+[0m [0m"lastNotNull",
                                        ]
                                      [32m+[0m [0mfields = ""
                                      [32m+[0m [0mvalues = false
                                    }
                                  [32m+[0m [0mshowUnfilled  = true
                                }
                              [32m+[0m [0mpluginVersion = "8.3.6"
                              [32m+[0m [0mtargets       = [
                                  [32m+[0m [0m{
                                      [32m+[0m [0mdatasource   = {
                                          [32m+[0m [0mtype = "prometheus"
                                          [32m+[0m [0muid  = "prometheus"
                                        }
                                      [32m+[0m [0mexemplar     = false
                                      [32m+[0m [0mexpr         = "abs(ray_grpc_server_req_finished_total{service=\"$ray_cluster\"})"
                                      [32m+[0m [0mformat       = "time_series"
                                      [32m+[0m [0minstant      = true
                                      [32m+[0m [0minterval     = ""
                                      [32m+[0m [0mlegendFormat = "{{Method}}"
                                      [32m+[0m [0mrefId        = "A"
                                    },
                                ]
                              [32m+[0m [0mtitle         = "ray grpc finishied total amount"
                              [32m+[0m [0mtype          = "bargauge"
                            },
                        ]
                      [32m+[0m [0mtitle     = "rpc metrics"
                      [32m+[0m [0mtype      = "row"
                    },
                ]
              [32m+[0m [0mschemaVersion        = 34
              [32m+[0m [0mstyle                = "dark"
              [32m+[0m [0mtags                 = []
              [32m+[0m [0mtemplating           = {
                  [32m+[0m [0mlist = [
                      [32m+[0m [0m{
                          [32m+[0m [0mcurrent     = {
                              [32m+[0m [0mselected = false
                              [32m+[0m [0mtext     = "Prometheus"
                              [32m+[0m [0mvalue    = "Prometheus"
                            }
                          [32m+[0m [0mhide        = 0
                          [32m+[0m [0mincludeAll  = false
                          [32m+[0m [0mmulti       = false
                          [32m+[0m [0mname        = "data_source"
                          [32m+[0m [0moptions     = []
                          [32m+[0m [0mquery       = "prometheus"
                          [32m+[0m [0mrefresh     = 1
                          [32m+[0m [0mregex       = ""
                          [32m+[0m [0mskipUrlSync = false
                          [32m+[0m [0mtype        = "datasource"
                        },
                      [32m+[0m [0m{
                          [32m+[0m [0mcurrent     = {
                              [32m+[0m [0mselected = true
                              [32m+[0m [0mtext     = "raycluster-complete-1-head-svc"
                              [32m+[0m [0mvalue    = "raycluster-complete-1-head-svc"
                            }
                          [32m+[0m [0mdefinition  = "label_values(service)"
                          [32m+[0m [0mhide        = 0
                          [32m+[0m [0mincludeAll  = false
                          [32m+[0m [0mlabel       = ""
                          [32m+[0m [0mmulti       = false
                          [32m+[0m [0mname        = "ray_cluster"
                          [32m+[0m [0moptions     = []
                          [32m+[0m [0mquery       = {
                              [32m+[0m [0mquery = "label_values(service)"
                              [32m+[0m [0mrefId = "StandardVariableQuery"
                            }
                          [32m+[0m [0mrefresh     = 1
                          [32m+[0m [0mregex       = "/.*-head-.*/"
                          [32m+[0m [0mskipUrlSync = false
                          [32m+[0m [0msort        = 1
                          [32m+[0m [0mtype        = "query"
                        },
                      [32m+[0m [0m{
                          [32m+[0m [0mdatasource  = {
                              [32m+[0m [0mtype = "prometheus"
                              [32m+[0m [0muid  = "prometheus"
                            }
                          [32m+[0m [0mfilters     = []
                          [32m+[0m [0mhide        = 0
                          [32m+[0m [0mname        = "custom"
                          [32m+[0m [0mskipUrlSync = false
                          [32m+[0m [0mtype        = "adhoc"
                        },
                    ]
                }
              [32m+[0m [0mtime                 = {
                  [32m+[0m [0mfrom = "now-6h"
                  [32m+[0m [0mto   = "now"
                }
              [32m+[0m [0mtimepicker           = {}
              [32m+[0m [0mtimezone             = ""
              [32m+[0m [0mtitle                = "ray_cluster_specific"
              [32m+[0m [0muid                  = "TnDk-Y87z"
              [32m+[0m [0mweekStart            = ""
            }
        )
      [32m+[0m [0m[1m[0mdashboard_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mfolder[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mslug[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0muid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0murl[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mversion[0m[0m      = (known after apply)
    }

[1m  # grafana_folder.ray[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "grafana_folder" "ray" {
      [32m+[0m [0m[1m[0mid[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mtitle[0m[0m = "ray"
      [32m+[0m [0m[1m[0muid[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0murl[0m[0m   = (known after apply)
    }

[1m  # kubectl_manifest.cluster_provisioner[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "kubectl_manifest" "cluster_provisioner" {
      [32m+[0m [0m[1m[0mapi_version[0m[0m             = "ray.io/v1alpha1"
      [32m+[0m [0m[1m[0mapply_only[0m[0m              = false
      [32m+[0m [0m[1m[0mforce_conflicts[0m[0m         = false
      [32m+[0m [0m[1m[0mforce_new[0m[0m               = false
      [32m+[0m [0m[1m[0mid[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mkind[0m[0m                    = "RayCluster"
      [32m+[0m [0m[1m[0mlive_manifest_incluster[0m[0m = (sensitive value)
      [32m+[0m [0m[1m[0mlive_uid[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                    = "raycluster-autoscaler"
      [32m+[0m [0m[1m[0mnamespace[0m[0m               = "ray-cluster"
      [32m+[0m [0m[1m[0mserver_side_apply[0m[0m       = false
      [32m+[0m [0m[1m[0muid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mvalidate_schema[0m[0m         = true
      [32m+[0m [0m[1m[0mwait_for_rollout[0m[0m        = true
      [32m+[0m [0m[1m[0myaml_body[0m[0m               = (sensitive value)
      [32m+[0m [0m[1m[0myaml_body_parsed[0m[0m        = <<-EOT
            apiVersion: ray.io/v1alpha1
            kind: RayCluster
            metadata:
              labels:
                controller-tools.k8s.io: "1.0"
              name: raycluster-autoscaler
              namespace: ray-cluster
            spec:
              headGroupSpec:
                rayStartParams:
                  block: "true"
                  dashboard-host: 0.0.0.0
                  port: "6379"
                replicas: 1
                serviceType: ClusterIP
                template:
                  metadata:
                    annotations:
                      key: value
                    labels:
                      groupName: headgroup
                      rayCluster: raycluster-sample
                      rayNodeType: head
                  spec:
                    containers:
                    - env:
                      - name: CPU_REQUEST
                        valueFrom:
                          resourceFieldRef:
                            containerName: ray-head
                            resource: requests.cpu
                      - name: CPU_LIMITS
                        valueFrom:
                          resourceFieldRef:
                            containerName: ray-head
                            resource: limits.cpu
                      - name: MEMORY_LIMITS
                        valueFrom:
                          resourceFieldRef:
                            containerName: ray-head
                            resource: limits.memory
                      - name: MEMORY_REQUESTS
                        valueFrom:
                          resourceFieldRef:
                            containerName: ray-head
                            resource: requests.memory
                      - name: MY_POD_IP
                        valueFrom:
                          fieldRef:
                            fieldPath: status.podIP
                      image: 296075517832.dkr.ecr.us-east-2.amazonaws.com/ray-demo:latest
                      lifecycle:
                        preStop:
                          exec:
                            command:
                            - /bin/sh
                            - -c
                            - ray stop
                      name: ray-head
                      ports:
                      - containerPort: 6379
                        name: gcs
                      - containerPort: 8265
                        name: dashboard
                      - containerPort: 10001
                        name: client
                      - containerPort: 8080
                        name: metrics
                      - containerPort: 8000
                        name: serve
                      resources:
                        limits:
                          cpu: "14"
                          memory: 54Gi
                        requests:
                          cpu: "14"
                          memory: 54Gi
                    serviceAccountName: ray-cluster-sa
              rayVersion: 1.13.0
              workerGroupSpecs:
              - groupName: large-group
                maxReplicas: 10
                minReplicas: 1
                rayStartParams:
                  block: "true"
                replicas: 1
                template:
                  metadata:
                    annotations:
                      key: value
                    labels:
                      groupName: small-group
                      rayCluster: raycluster-complete
                      rayNodeType: worker
                  spec:
                    containers:
                    - env:
                      - name: RAY_DISABLE_DOCKER_CPU_WARNING
                        value: "1"
                      - name: TYPE
                        value: worker
                      - name: CPU_REQUEST
                        valueFrom:
                          resourceFieldRef:
                            containerName: machine-learning
                            resource: requests.cpu
                      - name: CPU_LIMITS
                        valueFrom:
                          resourceFieldRef:
                            containerName: machine-learning
                            resource: limits.cpu
                      - name: MEMORY_LIMITS
                        valueFrom:
                          resourceFieldRef:
                            containerName: machine-learning
                            resource: limits.memory
                      - name: MEMORY_REQUESTS
                        valueFrom:
                          resourceFieldRef:
                            containerName: machine-learning
                            resource: requests.memory
                      - name: MY_POD_NAME
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.name
                      - name: MY_POD_IP
                        valueFrom:
                          fieldRef:
                            fieldPath: status.podIP
                      image: 296075517832.dkr.ecr.us-east-2.amazonaws.com/ray-demo:latest
                      lifecycle:
                        preStop:
                          exec:
                            command:
                            - /bin/sh
                            - -c
                            - ray stop
                      name: machine-learning
                      ports:
                      - containerPort: 80
                      resources:
                        limits:
                          cpu: "14"
                          memory: 54Gi
                        requests:
                          cpu: "14"
                          memory: 54Gi
                      volumeMounts:
                      - mountPath: /var/log
                        name: log-volume
                    initContainers:
                    - command:
                      - sh
                      - -c
                      - until nslookup $RAY_IP.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local;
                        do echo waiting for myservice; sleep 2; done
                      image: busybox:1.28
                      name: init-myservice
                    serviceAccountName: ray-cluster-sa
                    volumes:
                    - emptyDir: {}
                      name: log-volume
        EOT
      [32m+[0m [0m[1m[0myaml_incluster[0m[0m          = (sensitive value)
    }

[1m  # kubectl_manifest.prometheus[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "kubectl_manifest" "prometheus" {
      [32m+[0m [0m[1m[0mapi_version[0m[0m             = "monitoring.coreos.com/v1"
      [32m+[0m [0m[1m[0mapply_only[0m[0m              = false
      [32m+[0m [0m[1m[0mforce_conflicts[0m[0m         = false
      [32m+[0m [0m[1m[0mforce_new[0m[0m               = false
      [32m+[0m [0m[1m[0mid[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mkind[0m[0m                    = "ServiceMonitor"
      [32m+[0m [0m[1m[0mlive_manifest_incluster[0m[0m = (sensitive value)
      [32m+[0m [0m[1m[0mlive_uid[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                    = "kube-prometheus-stack-ray-monitor"
      [32m+[0m [0m[1m[0mnamespace[0m[0m               = "kube-prometheus-stack"
      [32m+[0m [0m[1m[0mserver_side_apply[0m[0m       = false
      [32m+[0m [0m[1m[0muid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mvalidate_schema[0m[0m         = true
      [32m+[0m [0m[1m[0mwait_for_rollout[0m[0m        = true
      [32m+[0m [0m[1m[0myaml_body[0m[0m               = (sensitive value)
      [32m+[0m [0m[1m[0myaml_body_parsed[0m[0m        = <<-EOT
            apiVersion: monitoring.coreos.com/v1
            kind: ServiceMonitor
            metadata:
              labels:
                ray.io/node-type: head
                release: kube-prometheus-stack
              name: kube-prometheus-stack-ray-monitor
              namespace: kube-prometheus-stack
            spec:
              endpoints:
              - port: metrics
              namespaceSelector:
                matchNames:
                - ray-cluster
              selector:
                matchLabels:
                  ray.io/node-type: head
        EOT
      [32m+[0m [0m[1m[0myaml_incluster[0m[0m          = (sensitive value)
    }

[1m  # module.cluster_irsa.aws_iam_role.irsa[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role" "irsa" {
      [32m+[0m [0m[1m[0marn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0massume_role_policy[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mcreate_date[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m           = "AWS IAM Role for the Kubernetes service account ray-cluster-sa."
      [32m+[0m [0m[1m[0mforce_detach_policies[0m[0m = true
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mmanaged_policy_arns[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mmax_session_duration[0m[0m  = 3600
      [32m+[0m [0m[1m[0mname[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mname_prefix[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m                  = "/"
      [32m+[0m [0m[1m[0mtags_all[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0munique_id[0m[0m             = (known after apply)

      [32m+[0m [0minline_policy {
          [32m+[0m [0m[1m[0mname[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mpolicy[0m[0m = (known after apply)
        }
    }

[1m  # module.cluster_irsa.aws_iam_role_policy_attachment.irsa[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "irsa" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mrole[0m[0m       = (known after apply)
    }

[1m  # module.cluster_irsa.kubernetes_namespace_v1.irsa[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "kubernetes_namespace_v1" "irsa" {
      [32m+[0m [0m[1m[0mid[0m[0m = (known after apply)

      [32m+[0m [0mmetadata {
          [32m+[0m [0m[1m[0mgeneration[0m[0m       = (known after apply)
          [32m+[0m [0m[1m[0mname[0m[0m             = "ray-cluster"
          [32m+[0m [0m[1m[0mresource_version[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0muid[0m[0m              = (known after apply)
        }

      [32m+[0m [0mtimeouts {
          [32m+[0m [0m[1m[0mdelete[0m[0m = "15m"
        }
    }

[1m  # module.cluster_irsa.kubernetes_service_account_v1.irsa[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "kubernetes_service_account_v1" "irsa" {
      [32m+[0m [0m[1m[0mautomount_service_account_token[0m[0m = true
      [32m+[0m [0m[1m[0mdefault_secret_name[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                              = (known after apply)

      [32m+[0m [0mmetadata {
          [32m+[0m [0m[1m[0mannotations[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mgeneration[0m[0m       = (known after apply)
          [32m+[0m [0m[1m[0mname[0m[0m             = "ray-cluster-sa"
          [32m+[0m [0m[1m[0mnamespace[0m[0m        = "ray-cluster"
          [32m+[0m [0m[1m[0mresource_version[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0muid[0m[0m              = (known after apply)
        }
    }

[1m  # module.eks_blueprints.data.aws_eks_cluster.cluster[0][0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "aws_eks_cluster" "cluster" {
      [32m+[0m [0m[1m[0marn[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mcertificate_authority[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mcluster_id[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mcreated_at[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0menabled_cluster_log_types[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mendpoint[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0midentity[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mkubernetes_network_config[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0moutpost_config[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mplatform_version[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mrole_arn[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mstatus[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mversion[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mvpc_config[0m[0m                = (known after apply)
    }

[1m  # module.eks_blueprints.data.http.eks_cluster_readiness[0][0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "http" "eks_cluster_readiness" {
      [32m+[0m [0m[1m[0mbody[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mca_certificate[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mresponse_headers[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mtimeout[0m[0m          = 600
      [32m+[0m [0m[1m[0murl[0m[0m              = (known after apply)
    }

[1m  # module.eks_blueprints.kubernetes_config_map.aws_auth[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "kubernetes_config_map" "aws_auth" {
      [32m+[0m [0m[1m[0mdata[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m   = (known after apply)

      [32m+[0m [0mmetadata {
          [32m+[0m [0m[1m[0mgeneration[0m[0m       = (known after apply)
          [32m+[0m [0m[1m[0mlabels[0m[0m           = {
              [32m+[0m [0m"app.kubernetes.io/created-by" = "terraform-aws-eks-blueprints"
              [32m+[0m [0m"app.kubernetes.io/managed-by" = "terraform-aws-eks-blueprints"
            }
          [32m+[0m [0m[1m[0mname[0m[0m             = "aws-auth"
          [32m+[0m [0m[1m[0mnamespace[0m[0m        = "kube-system"
          [32m+[0m [0m[1m[0mresource_version[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0muid[0m[0m              = (known after apply)
        }
    }

[1m  # module.eks_blueprints_kubernetes_addons.data.aws_eks_cluster.eks_cluster[0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "aws_eks_cluster" "eks_cluster" {
      [32m+[0m [0m[1m[0marn[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mcertificate_authority[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mcluster_id[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mcreated_at[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0menabled_cluster_log_types[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mendpoint[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0midentity[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mkubernetes_network_config[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0moutpost_config[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mplatform_version[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mrole_arn[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mstatus[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mversion[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mvpc_config[0m[0m                = (known after apply)
    }

[1m  # module.eks_blueprints_kubernetes_addons.time_sleep.dataplane[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "time_sleep" "dataplane" {
      [32m+[0m [0m[1m[0mcreate_duration[0m[0m = "10s"
      [32m+[0m [0m[1m[0mid[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mtriggers[0m[0m        = {
          [32m+[0m [0m"data_plane_wait_arn" = ""
          [32m+[0m [0m"eks_cluster_id"      = (known after apply)
        }
    }

[1m  # module.vpc.aws_default_network_acl.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_default_network_acl" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mdefault_network_acl_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                   = {
          [32m+[0m [0m"Blueprint"  = "ray"
          [32m+[0m [0m"GithubRepo" = "github.com/aws-ia/terraform-aws-eks-blueprints"
          [32m+[0m [0m"Name"       = "ray-default"
          [32m+[0m [0m"longpaths"  = "true"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = {
          [32m+[0m [0m"Blueprint"  = "ray"
          [32m+[0m [0m"GithubRepo" = "github.com/aws-ia/terraform-aws-eks-blueprints"
          [32m+[0m [0m"Name"       = "ray-default"
          [32m+[0m [0m"longpaths"  = "true"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                 = (known after apply)

      [32m+[0m [0megress {
          [32m+[0m [0m[1m[0maction[0m[0m          = "allow"
          [32m+[0m [0m[1m[0mfrom_port[0m[0m       = 0
          [32m+[0m [0m[1m[0mipv6_cidr_block[0m[0m = "::/0"
          [32m+[0m [0m[1m[0mprotocol[0m[0m        = "-1"
          [32m+[0m [0m[1m[0mrule_no[0m[0m         = 101
          [32m+[0m [0m[1m[0mto_port[0m[0m         = 0
        }
      [32m+[0m [0megress {
          [32m+[0m [0m[1m[0maction[0m[0m     = "allow"
          [32m+[0m [0m[1m[0mcidr_block[0m[0m = "0.0.0.0/0"
          [32m+[0m [0m[1m[0mfrom_port[0m[0m  = 0
          [32m+[0m [0m[1m[0mprotocol[0m[0m   = "-1"
          [32m+[0m [0m[1m[0mrule_no[0m[0m    = 100
          [32m+[0m [0m[1m[0mto_port[0m[0m    = 0
        }

      [32m+[0m [0mingress {
          [32m+[0m [0m[1m[0maction[0m[0m          = "allow"
          [32m+[0m [0m[1m[0mfrom_port[0m[0m       = 0
          [32m+[0m [0m[1m[0mipv6_cidr_block[0m[0m = "::/0"
          [32m+[0m [0m[1m[0mprotocol[0m[0m        = "-1"
          [32m+[0m [0m[1m[0mrule_no[0m[0m         = 101
          [32m+[0m [0m[1m[0mto_port[0m[0m         = 0
        }
      [32m+[0m [0mingress {
          [32m+[0m [0m[1m[0maction[0m[0m     = "allow"
          [32m+[0m [0m[1m[0mcidr_block[0m[0m = "0.0.0.0/0"
          [32m+[0m [0m[1m[0mfrom_port[0m[0m  = 0
          [32m+[0m [0m[1m[0mprotocol[0m[0m   = "-1"
          [32m+[0m [0m[1m[0mrule_no[0m[0m    = 100
          [32m+[0m [0m[1m[0mto_port[0m[0m    = 0
        }
    }

[1m  # module.vpc.aws_default_route_table.default[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_default_route_table" "default" {
      [32m+[0m [0m[1m[0marn[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mdefault_route_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mroute[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                   = {
          [32m+[0m [0m"Blueprint"  = "ray"
          [32m+[0m [0m"GithubRepo" = "github.com/aws-ia/terraform-aws-eks-blueprints"
          [32m+[0m [0m"Name"       = "ray-default"
          [32m+[0m [0m"longpaths"  = "true"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = {
          [32m+[0m [0m"Blueprint"  = "ray"
          [32m+[0m [0m"GithubRepo" = "github.com/aws-ia/terraform-aws-eks-blueprints"
          [32m+[0m [0m"Name"       = "ray-default"
          [32m+[0m [0m"longpaths"  = "true"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                 = (known after apply)

      [32m+[0m [0mtimeouts {
          [32m+[0m [0m[1m[0mcreate[0m[0m = "5m"
          [32m+[0m [0m[1m[0mupdate[0m[0m = "5m"
        }
    }

[1m  # module.vpc.aws_default_security_group.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_default_security_group" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0megress[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mingress[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mname_prefix[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mrevoke_rules_on_delete[0m[0m = false
      [32m+[0m [0m[1m[0mtags[0m[0m                   = {
          [32m+[0m [0m"Blueprint"  = "ray"
          [32m+[0m [0m"GithubRepo" = "github.com/aws-ia/terraform-aws-eks-blueprints"
          [32m+[0m [0m"Name"       = "ray-default"
          [32m+[0m [0m"longpaths"  = "true"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = {
          [32m+[0m [0m"Blueprint"  = "ray"
          [32m+[0m [0m"GithubRepo" = "github.com/aws-ia/terraform-aws-eks-blueprints"
          [32m+[0m [0m"Name"       = "ray-default"
          [32m+[0m [0m"longpaths"  = "true"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                 = (known after apply)
    }

[1m  # module.vpc.aws_internet_gateway.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_internet_gateway" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m     = {
          [32m+[0m [0m"Blueprint"  = "ray"
          [32m+[0m [0m"GithubRepo" = "github.com/aws-ia/terraform-aws-eks-blueprints"
          [32m+[0m [0m"Name"       = "ray"
          [32m+[0m [0m"longpaths"  = "true"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m = {
          [32m+[0m [0m"Blueprint"  = "ray"
          [32m+[0m [0m"GithubRepo" = "github.com/aws-ia/terraform-aws-eks-blueprints"
          [32m+[0m [0m"Name"       = "ray"
          [32m+[0m [0m"longpaths"  = "true"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m   = (known after apply)
    }

[1m  # module.vpc.aws_nat_gateway.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_nat_gateway" "this" {
      [32m+[0m [0m[1m[0mallocation_id[0m[0m        = "eipalloc-099296c524e33e4b7"
      [32m+[0m [0m[1m[0mconnectivity_type[0m[0m    = "public"
      [32m+[0m [0m[1m[0mid[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ip[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ip[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                 = {
          [32m+[0m [0m"Blueprint"  = "ray"
          [32m+[0m [0m"GithubRepo" = "github.com/aws-ia/terraform-aws-eks-blueprints"
          [32m+[0m [0m"Name"       = "ray-us-east-2a"
          [32m+[0m [0m"longpaths"  = "true"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m             = {
          [32m+[0m [0m"Blueprint"  = "ray"
          [32m+[0m [0m"GithubRepo" = "github.com/aws-ia/terraform-aws-eks-blueprints"
          [32m+[0m [0m"Name"       = "ray-us-east-2a"
          [32m+[0m [0m"longpaths"  = "true"
        }
    }

[1m  # module.vpc.aws_route.private_nat_gateway[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route" "private_nat_gateway" {
      [32m+[0m [0m[1m[0mdestination_cidr_block[0m[0m = "0.0.0.0/0"
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0minstance_id[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0minstance_owner_id[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mnat_gateway_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0morigin[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mstate[0m[0m                  = (known after apply)

      [32m+[0m [0mtimeouts {
          [32m+[0m [0m[1m[0mcreate[0m[0m = "5m"
        }
    }

[1m  # module.vpc.aws_route.public_internet_gateway[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route" "public_internet_gateway" {
      [32m+[0m [0m[1m[0mdestination_cidr_block[0m[0m = "0.0.0.0/0"
      [32m+[0m [0m[1m[0mgateway_id[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0minstance_id[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0minstance_owner_id[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0morigin[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mstate[0m[0m                  = (known after apply)

      [32m+[0m [0mtimeouts {
          [32m+[0m [0m[1m[0mcreate[0m[0m = "5m"
        }
    }

[1m  # module.vpc.aws_route_table.private[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table" "private" {
      [32m+[0m [0m[1m[0marn[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpropagating_vgws[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mroute[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m             = {
          [32m+[0m [0m"Blueprint"  = "ray"
          [32m+[0m [0m"GithubRepo" = "github.com/aws-ia/terraform-aws-eks-blueprints"
          [32m+[0m [0m"Name"       = "ray-private"
          [32m+[0m [0m"longpaths"  = "true"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m         = {
          [32m+[0m [0m"Blueprint"  = "ray"
          [32m+[0m [0m"GithubRepo" = "github.com/aws-ia/terraform-aws-eks-blueprints"
          [32m+[0m [0m"Name"       = "ray-private"
          [32m+[0m [0m"longpaths"  = "true"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m           = (known after apply)
    }

[1m  # module.vpc.aws_route_table.public[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table" "public" {
      [32m+[0m [0m[1m[0marn[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpropagating_vgws[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mroute[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m             = {
          [32m+[0m [0m"Blueprint"  = "ray"
          [32m+[0m [0m"GithubRepo" = "github.com/aws-ia/terraform-aws-eks-blueprints"
          [32m+[0m [0m"Name"       = "ray-public"
          [32m+[0m [0m"longpaths"  = "true"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m         = {
          [32m+[0m [0m"Blueprint"  = "ray"
          [32m+[0m [0m"GithubRepo" = "github.com/aws-ia/terraform-aws-eks-blueprints"
          [32m+[0m [0m"Name"       = "ray-public"
          [32m+[0m [0m"longpaths"  = "true"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m           = (known after apply)
    }

[1m  # module.vpc.aws_route_table_association.private[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "private" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # module.vpc.aws_route_table_association.private[1][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "private" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # module.vpc.aws_route_table_association.private[2][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "private" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # module.vpc.aws_route_table_association.public[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "public" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # module.vpc.aws_route_table_association.public[1][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "public" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # module.vpc.aws_route_table_association.public[2][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "public" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # module.vpc.aws_subnet.private[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_subnet" "private" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = "us-east-2a"
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = "10.0.10.0/24"
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = false
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = false
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = {
          [32m+[0m [0m"Blueprint"                       = "ray"
          [32m+[0m [0m"GithubRepo"                      = "github.com/aws-ia/terraform-aws-eks-blueprints"
          [32m+[0m [0m"Name"                            = "ray-private-us-east-2a"
          [32m+[0m [0m"kubernetes.io/cluster/ray"       = "shared"
          [32m+[0m [0m"kubernetes.io/role/internal-elb" = "1"
          [32m+[0m [0m"longpaths"                       = "true"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m                                       = {
          [32m+[0m [0m"Blueprint"                       = "ray"
          [32m+[0m [0m"GithubRepo"                      = "github.com/aws-ia/terraform-aws-eks-blueprints"
          [32m+[0m [0m"Name"                            = "ray-private-us-east-2a"
          [32m+[0m [0m"kubernetes.io/cluster/ray"       = "shared"
          [32m+[0m [0m"kubernetes.io/role/internal-elb" = "1"
          [32m+[0m [0m"longpaths"                       = "true"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # module.vpc.aws_subnet.private[1][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_subnet" "private" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = "us-east-2b"
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = "10.0.11.0/24"
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = false
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = false
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = {
          [32m+[0m [0m"Blueprint"                       = "ray"
          [32m+[0m [0m"GithubRepo"                      = "github.com/aws-ia/terraform-aws-eks-blueprints"
          [32m+[0m [0m"Name"                            = "ray-private-us-east-2b"
          [32m+[0m [0m"kubernetes.io/cluster/ray"       = "shared"
          [32m+[0m [0m"kubernetes.io/role/internal-elb" = "1"
          [32m+[0m [0m"longpaths"                       = "true"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m                                       = {
          [32m+[0m [0m"Blueprint"                       = "ray"
          [32m+[0m [0m"GithubRepo"                      = "github.com/aws-ia/terraform-aws-eks-blueprints"
          [32m+[0m [0m"Name"                            = "ray-private-us-east-2b"
          [32m+[0m [0m"kubernetes.io/cluster/ray"       = "shared"
          [32m+[0m [0m"kubernetes.io/role/internal-elb" = "1"
          [32m+[0m [0m"longpaths"                       = "true"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # module.vpc.aws_subnet.private[2][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_subnet" "private" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = "us-east-2c"
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = "10.0.12.0/24"
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = false
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = false
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = {
          [32m+[0m [0m"Blueprint"                       = "ray"
          [32m+[0m [0m"GithubRepo"                      = "github.com/aws-ia/terraform-aws-eks-blueprints"
          [32m+[0m [0m"Name"                            = "ray-private-us-east-2c"
          [32m+[0m [0m"kubernetes.io/cluster/ray"       = "shared"
          [32m+[0m [0m"kubernetes.io/role/internal-elb" = "1"
          [32m+[0m [0m"longpaths"                       = "true"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m                                       = {
          [32m+[0m [0m"Blueprint"                       = "ray"
          [32m+[0m [0m"GithubRepo"                      = "github.com/aws-ia/terraform-aws-eks-blueprints"
          [32m+[0m [0m"Name"                            = "ray-private-us-east-2c"
          [32m+[0m [0m"kubernetes.io/cluster/ray"       = "shared"
          [32m+[0m [0m"kubernetes.io/role/internal-elb" = "1"
          [32m+[0m [0m"longpaths"                       = "true"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # module.vpc.aws_subnet.public[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_subnet" "public" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = "us-east-2a"
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = "10.0.0.0/24"
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = false
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = true
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = {
          [32m+[0m [0m"Blueprint"                 = "ray"
          [32m+[0m [0m"GithubRepo"                = "github.com/aws-ia/terraform-aws-eks-blueprints"
          [32m+[0m [0m"Name"                      = "ray-public-us-east-2a"
          [32m+[0m [0m"kubernetes.io/cluster/ray" = "shared"
          [32m+[0m [0m"kubernetes.io/role/elb"    = "1"
          [32m+[0m [0m"longpaths"                 = "true"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m                                       = {
          [32m+[0m [0m"Blueprint"                 = "ray"
          [32m+[0m [0m"GithubRepo"                = "github.com/aws-ia/terraform-aws-eks-blueprints"
          [32m+[0m [0m"Name"                      = "ray-public-us-east-2a"
          [32m+[0m [0m"kubernetes.io/cluster/ray" = "shared"
          [32m+[0m [0m"kubernetes.io/role/elb"    = "1"
          [32m+[0m [0m"longpaths"                 = "true"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # module.vpc.aws_subnet.public[1][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_subnet" "public" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = "us-east-2b"
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = "10.0.1.0/24"
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = false
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = true
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = {
          [32m+[0m [0m"Blueprint"                 = "ray"
          [32m+[0m [0m"GithubRepo"                = "github.com/aws-ia/terraform-aws-eks-blueprints"
          [32m+[0m [0m"Name"                      = "ray-public-us-east-2b"
          [32m+[0m [0m"kubernetes.io/cluster/ray" = "shared"
          [32m+[0m [0m"kubernetes.io/role/elb"    = "1"
          [32m+[0m [0m"longpaths"                 = "true"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m                                       = {
          [32m+[0m [0m"Blueprint"                 = "ray"
          [32m+[0m [0m"GithubRepo"                = "github.com/aws-ia/terraform-aws-eks-blueprints"
          [32m+[0m [0m"Name"                      = "ray-public-us-east-2b"
          [32m+[0m [0m"kubernetes.io/cluster/ray" = "shared"
          [32m+[0m [0m"kubernetes.io/role/elb"    = "1"
          [32m+[0m [0m"longpaths"                 = "true"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # module.vpc.aws_subnet.public[2][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_subnet" "public" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = "us-east-2c"
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = "10.0.2.0/24"
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = false
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = true
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = {
          [32m+[0m [0m"Blueprint"                 = "ray"
          [32m+[0m [0m"GithubRepo"                = "github.com/aws-ia/terraform-aws-eks-blueprints"
          [32m+[0m [0m"Name"                      = "ray-public-us-east-2c"
          [32m+[0m [0m"kubernetes.io/cluster/ray" = "shared"
          [32m+[0m [0m"kubernetes.io/role/elb"    = "1"
          [32m+[0m [0m"longpaths"                 = "true"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m                                       = {
          [32m+[0m [0m"Blueprint"                 = "ray"
          [32m+[0m [0m"GithubRepo"                = "github.com/aws-ia/terraform-aws-eks-blueprints"
          [32m+[0m [0m"Name"                      = "ray-public-us-east-2c"
          [32m+[0m [0m"kubernetes.io/cluster/ray" = "shared"
          [32m+[0m [0m"kubernetes.io/role/elb"    = "1"
          [32m+[0m [0m"longpaths"                 = "true"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # module.vpc.aws_vpc.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_vpc" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m                                  = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                           = "10.0.0.0/16"
      [32m+[0m [0m[1m[0mdefault_network_acl_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mdefault_route_table_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mdefault_security_group_id[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mdhcp_options_id[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0menable_classiclink[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0menable_classiclink_dns_support[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0menable_dns_hostnames[0m[0m                 = true
      [32m+[0m [0m[1m[0menable_dns_support[0m[0m                   = true
      [32m+[0m [0m[1m[0menable_network_address_usage_metrics[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0minstance_tenancy[0m[0m                     = "default"
      [32m+[0m [0m[1m[0mipv6_association_id[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_network_border_group[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mmain_route_table_id[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                 = {
          [32m+[0m [0m"Blueprint"  = "ray"
          [32m+[0m [0m"GithubRepo" = "github.com/aws-ia/terraform-aws-eks-blueprints"
          [32m+[0m [0m"Name"       = "ray"
          [32m+[0m [0m"longpaths"  = "true"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m                             = {
          [32m+[0m [0m"Blueprint"  = "ray"
          [32m+[0m [0m"GithubRepo" = "github.com/aws-ia/terraform-aws-eks-blueprints"
          [32m+[0m [0m"Name"       = "ray"
          [32m+[0m [0m"longpaths"  = "true"
        }
    }

[1m  # module.eks_blueprints.module.aws_eks.data.tls_certificate.this[0][0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "tls_certificate" "this" {
      [32m+[0m [0m[1m[0mcertificates[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0murl[0m[0m          = (known after apply)
    }

[1m  # module.eks_blueprints.module.aws_eks.aws_ec2_tag.cluster_primary_security_group["Blueprint"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_ec2_tag" "cluster_primary_security_group" {
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mkey[0m[0m         = "Blueprint"
      [32m+[0m [0m[1m[0mresource_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mvalue[0m[0m       = "ray"
    }

[1m  # module.eks_blueprints.module.aws_eks.aws_ec2_tag.cluster_primary_security_group["GithubRepo"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_ec2_tag" "cluster_primary_security_group" {
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mkey[0m[0m         = "GithubRepo"
      [32m+[0m [0m[1m[0mresource_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mvalue[0m[0m       = "github.com/aws-ia/terraform-aws-eks-blueprints"
    }

[1m  # module.eks_blueprints.module.aws_eks.aws_ec2_tag.cluster_primary_security_group["longpaths"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_ec2_tag" "cluster_primary_security_group" {
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mkey[0m[0m         = "longpaths"
      [32m+[0m [0m[1m[0mresource_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mvalue[0m[0m       = "true"
    }

[1m  # module.eks_blueprints.module.aws_eks.aws_eks_cluster.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_eks_cluster" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mcertificate_authority[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mcluster_id[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mcreated_at[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0menabled_cluster_log_types[0m[0m = [
          [32m+[0m [0m"api",
          [32m+[0m [0m"audit",
          [32m+[0m [0m"authenticator",
          [32m+[0m [0m"controllerManager",
          [32m+[0m [0m"scheduler",
        ]
      [32m+[0m [0m[1m[0mendpoint[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0midentity[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                      = "ray"
      [32m+[0m [0m[1m[0mplatform_version[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mrole_arn[0m[0m                  = "arn:aws:iam::296075517832:role/ray-cluster-role"
      [32m+[0m [0m[1m[0mstatus[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                      = {
          [32m+[0m [0m"Blueprint"  = "ray"
          [32m+[0m [0m"GithubRepo" = "github.com/aws-ia/terraform-aws-eks-blueprints"
          [32m+[0m [0m"longpaths"  = "true"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m                  = {
          [32m+[0m [0m"Blueprint"  = "ray"
          [32m+[0m [0m"GithubRepo" = "github.com/aws-ia/terraform-aws-eks-blueprints"
          [32m+[0m [0m"longpaths"  = "true"
        }
      [32m+[0m [0m[1m[0mversion[0m[0m                   = "1.23"

      [32m+[0m [0mencryption_config {
          [32m+[0m [0m[1m[0mresources[0m[0m = [
              [32m+[0m [0m"secrets",
            ]

          [32m+[0m [0mprovider {
              [32m+[0m [0m[1m[0mkey_arn[0m[0m = "arn:aws:kms:us-east-2:296075517832:key/09e4e45f-64fd-4da5-b63d-18dc11ff695a"
            }
        }

      [32m+[0m [0mkubernetes_network_config {
          [32m+[0m [0m[1m[0mip_family[0m[0m         = "ipv4"
          [32m+[0m [0m[1m[0mservice_ipv4_cidr[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mservice_ipv6_cidr[0m[0m = (known after apply)
        }

      [32m+[0m [0mtimeouts {}

      [32m+[0m [0mvpc_config {
          [32m+[0m [0m[1m[0mcluster_security_group_id[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mendpoint_private_access[0m[0m   = false
          [32m+[0m [0m[1m[0mendpoint_public_access[0m[0m    = true
          [32m+[0m [0m[1m[0mpublic_access_cidrs[0m[0m       = [
              [32m+[0m [0m"0.0.0.0/0",
            ]
          [32m+[0m [0m[1m[0msecurity_group_ids[0m[0m        = (known after apply)
          [32m+[0m [0m[1m[0msubnet_ids[0m[0m                = (known after apply)
          [32m+[0m [0m[1m[0mvpc_id[0m[0m                    = (known after apply)
        }
    }

[1m  # module.eks_blueprints.module.aws_eks.aws_iam_openid_connect_provider.oidc_provider[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_openid_connect_provider" "oidc_provider" {
      [32m+[0m [0m[1m[0marn[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mclient_id_list[0m[0m  = [
          [32m+[0m [0m"sts.amazonaws.com",
        ]
      [32m+[0m [0m[1m[0mid[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m            = {
          [32m+[0m [0m"Blueprint"  = "ray"
          [32m+[0m [0m"GithubRepo" = "github.com/aws-ia/terraform-aws-eks-blueprints"
          [32m+[0m [0m"Name"       = "ray-eks-irsa"
          [32m+[0m [0m"longpaths"  = "true"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m        = {
          [32m+[0m [0m"Blueprint"  = "ray"
          [32m+[0m [0m"GithubRepo" = "github.com/aws-ia/terraform-aws-eks-blueprints"
          [32m+[0m [0m"Name"       = "ray-eks-irsa"
          [32m+[0m [0m"longpaths"  = "true"
        }
      [32m+[0m [0m[1m[0mthumbprint_list[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0murl[0m[0m             = (known after apply)
    }

[1m  # module.eks_blueprints.module.aws_eks.aws_security_group.cluster[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group" "cluster" {
      [32m+[0m [0m[1m[0marn[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m            = "EKS cluster security group"
      [32m+[0m [0m[1m[0megress[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mingress[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mname_prefix[0m[0m            = "ray-cluster-"
      [32m+[0m [0m[1m[0mowner_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mrevoke_rules_on_delete[0m[0m = false
      [32m+[0m [0m[1m[0mtags[0m[0m                   = {
          [32m+[0m [0m"Blueprint"  = "ray"
          [32m+[0m [0m"GithubRepo" = "github.com/aws-ia/terraform-aws-eks-blueprints"
          [32m+[0m [0m"Name"       = "ray-cluster"
          [32m+[0m [0m"longpaths"  = "true"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = {
          [32m+[0m [0m"Blueprint"  = "ray"
          [32m+[0m [0m"GithubRepo" = "github.com/aws-ia/terraform-aws-eks-blueprints"
          [32m+[0m [0m"Name"       = "ray-cluster"
          [32m+[0m [0m"longpaths"  = "true"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                 = (known after apply)
    }

[1m  # module.eks_blueprints.module.aws_eks.aws_security_group.node[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group" "node" {
      [32m+[0m [0m[1m[0marn[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m            = "EKS node shared security group"
      [32m+[0m [0m[1m[0megress[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mingress[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mname_prefix[0m[0m            = "ray-node-"
      [32m+[0m [0m[1m[0mowner_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mrevoke_rules_on_delete[0m[0m = false
      [32m+[0m [0m[1m[0mtags[0m[0m                   = {
          [32m+[0m [0m"Blueprint"                 = "ray"
          [32m+[0m [0m"GithubRepo"                = "github.com/aws-ia/terraform-aws-eks-blueprints"
          [32m+[0m [0m"Name"                      = "ray-node"
          [32m+[0m [0m"kubernetes.io/cluster/ray" = "owned"
          [32m+[0m [0m"longpaths"                 = "true"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = {
          [32m+[0m [0m"Blueprint"                 = "ray"
          [32m+[0m [0m"GithubRepo"                = "github.com/aws-ia/terraform-aws-eks-blueprints"
          [32m+[0m [0m"Name"                      = "ray-node"
          [32m+[0m [0m"kubernetes.io/cluster/ray" = "owned"
          [32m+[0m [0m"longpaths"                 = "true"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                 = (known after apply)
    }

[1m  # module.eks_blueprints.module.aws_eks.aws_security_group_rule.cluster["egress_nodes_443"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "cluster" {
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "Cluster API to node groups"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 443
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprefix_list_ids[0m[0m          = []
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "tcp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0msecurity_group_rule_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = false
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 443
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "egress"
    }

[1m  # module.eks_blueprints.module.aws_eks.aws_security_group_rule.cluster["egress_nodes_kubelet"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "cluster" {
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "Cluster API to node kubelets"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 10250
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprefix_list_ids[0m[0m          = []
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "tcp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0msecurity_group_rule_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = false
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 10250
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "egress"
    }

[1m  # module.eks_blueprints.module.aws_eks.aws_security_group_rule.cluster["ingress_nodes_443"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "cluster" {
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "Node groups to cluster API"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 443
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprefix_list_ids[0m[0m          = []
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "tcp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0msecurity_group_rule_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = false
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 443
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "ingress"
    }

[1m  # module.eks_blueprints.module.aws_eks.aws_security_group_rule.node["egress_all"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "node" {
      [32m+[0m [0m[1m[0mcidr_blocks[0m[0m              = [
          [32m+[0m [0m"0.0.0.0/0",
        ]
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "Node all egress"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 0
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_blocks[0m[0m         = [
          [32m+[0m [0m"::/0",
        ]
      [32m+[0m [0m[1m[0mprefix_list_ids[0m[0m          = []
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "-1"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0msecurity_group_rule_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = false
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 0
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "egress"
    }

[1m  # module.eks_blueprints.module.aws_eks.aws_security_group_rule.node["egress_cluster_443"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "node" {
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "Node groups to cluster API"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 443
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprefix_list_ids[0m[0m          = []
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "tcp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0msecurity_group_rule_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = false
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 443
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "egress"
    }

[1m  # module.eks_blueprints.module.aws_eks.aws_security_group_rule.node["egress_https"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "node" {
      [32m+[0m [0m[1m[0mcidr_blocks[0m[0m              = [
          [32m+[0m [0m"0.0.0.0/0",
        ]
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "Egress all HTTPS to internet"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 443
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprefix_list_ids[0m[0m          = []
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "tcp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0msecurity_group_rule_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = false
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 443
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "egress"
    }

[1m  # module.eks_blueprints.module.aws_eks.aws_security_group_rule.node["egress_ntp_tcp"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "node" {
      [32m+[0m [0m[1m[0mcidr_blocks[0m[0m              = [
          [32m+[0m [0m"0.0.0.0/0",
        ]
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "Egress NTP/TCP to internet"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 123
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprefix_list_ids[0m[0m          = []
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "tcp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0msecurity_group_rule_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = false
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 123
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "egress"
    }

[1m  # module.eks_blueprints.module.aws_eks.aws_security_group_rule.node["egress_ntp_udp"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "node" {
      [32m+[0m [0m[1m[0mcidr_blocks[0m[0m              = [
          [32m+[0m [0m"0.0.0.0/0",
        ]
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "Egress NTP/UDP to internet"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 123
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprefix_list_ids[0m[0m          = []
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "udp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0msecurity_group_rule_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = false
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 123
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "egress"
    }

[1m  # module.eks_blueprints.module.aws_eks.aws_security_group_rule.node["egress_self_coredns_tcp"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "node" {
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "Node to node CoreDNS"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 53
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprefix_list_ids[0m[0m          = []
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "tcp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0msecurity_group_rule_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = true
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 53
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "egress"
    }

[1m  # module.eks_blueprints.module.aws_eks.aws_security_group_rule.node["egress_self_coredns_udp"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "node" {
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "Node to node CoreDNS"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 53
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprefix_list_ids[0m[0m          = []
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "udp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0msecurity_group_rule_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = true
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 53
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "egress"
    }

[1m  # module.eks_blueprints.module.aws_eks.aws_security_group_rule.node["ingress_cluster_443"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "node" {
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "Cluster API to node groups"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 443
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprefix_list_ids[0m[0m          = []
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "tcp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0msecurity_group_rule_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = false
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 443
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "ingress"
    }

[1m  # module.eks_blueprints.module.aws_eks.aws_security_group_rule.node["ingress_cluster_kubelet"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "node" {
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "Cluster API to node kubelets"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 10250
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprefix_list_ids[0m[0m          = []
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "tcp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0msecurity_group_rule_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = false
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 10250
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "ingress"
    }

[1m  # module.eks_blueprints.module.aws_eks.aws_security_group_rule.node["ingress_cluster_to_node_all_traffic"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "node" {
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "Cluster API to Nodegroup all traffic"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 0
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprefix_list_ids[0m[0m          = []
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "-1"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0msecurity_group_rule_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = false
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 0
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "ingress"
    }

[1m  # module.eks_blueprints.module.aws_eks.aws_security_group_rule.node["ingress_self_all"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "node" {
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "Node to node all ports/protocols"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 0
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprefix_list_ids[0m[0m          = []
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "-1"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0msecurity_group_rule_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = true
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 0
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "ingress"
    }

[1m  # module.eks_blueprints.module.aws_eks.aws_security_group_rule.node["ingress_self_coredns_tcp"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "node" {
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "Node to node CoreDNS"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 53
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprefix_list_ids[0m[0m          = []
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "tcp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0msecurity_group_rule_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = true
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 53
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "ingress"
    }

[1m  # module.eks_blueprints.module.aws_eks.aws_security_group_rule.node["ingress_self_coredns_udp"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "node" {
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "Node to node CoreDNS"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 53
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprefix_list_ids[0m[0m          = []
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "udp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0msecurity_group_rule_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = true
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 53
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "ingress"
    }

[1m  # module.eks_blueprints.module.aws_eks_managed_node_groups["mg_5"].data.aws_iam_policy_document.managed_ng_assume_role_policy[0m will be read during apply[0m
  # (depends on a resource or a module with changes pending)[0m
[0m [36m<=[0m[0m data "aws_iam_policy_document" "managed_ng_assume_role_policy" {
      [32m+[0m [0m[1m[0mid[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mjson[0m[0m = (known after apply)

      [32m+[0m [0mstatement {
          [32m+[0m [0m[1m[0mactions[0m[0m = [
              [32m+[0m [0m"sts:AssumeRole",
            ]
          [32m+[0m [0m[1m[0msid[0m[0m     = "EKSWorkerAssumeRole"

          [32m+[0m [0mprincipals {
              [32m+[0m [0m[1m[0midentifiers[0m[0m = [
                  [32m+[0m [0m"ec2.amazonaws.com",
                ]
              [32m+[0m [0m[1m[0mtype[0m[0m        = "Service"
            }
        }
    }

[1m  # module.eks_blueprints.module.aws_eks_managed_node_groups["mg_5"].aws_eks_node_group.managed_ng[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_eks_node_group" "managed_ng" {
      [32m+[0m [0m[1m[0mami_type[0m[0m               = "AL2_x86_64"
      [32m+[0m [0m[1m[0marn[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mcapacity_type[0m[0m          = "ON_DEMAND"
      [32m+[0m [0m[1m[0mcluster_name[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mdisk_size[0m[0m              = 50
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0minstance_types[0m[0m         = [
          [32m+[0m [0m"m5.8xlarge",
        ]
      [32m+[0m [0m[1m[0mnode_group_name[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mnode_group_name_prefix[0m[0m = "managed-ondemand-"
      [32m+[0m [0m[1m[0mnode_role_arn[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mrelease_version[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mresources[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mstatus[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0msubnet_ids[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mversion[0m[0m                = "1.23"

      [32m+[0m [0mscaling_config {
          [32m+[0m [0m[1m[0mdesired_size[0m[0m = 3
          [32m+[0m [0m[1m[0mmax_size[0m[0m     = 3
          [32m+[0m [0m[1m[0mmin_size[0m[0m     = 3
        }

      [32m+[0m [0mtimeouts {
          [32m+[0m [0m[1m[0mcreate[0m[0m = "30m"
          [32m+[0m [0m[1m[0mdelete[0m[0m = "30m"
          [32m+[0m [0m[1m[0mupdate[0m[0m = "2h"
        }

      [32m+[0m [0mupdate_config {
          [32m+[0m [0m[1m[0mmax_unavailable[0m[0m = 1
        }
    }

[1m  # module.eks_blueprints.module.aws_eks_managed_node_groups["mg_5"].aws_iam_instance_profile.managed_ng[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_instance_profile" "managed_ng" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mcreate_date[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mrole[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m        = {
          [32m+[0m [0m"Blueprint"  = "ray"
          [32m+[0m [0m"GithubRepo" = "github.com/aws-ia/terraform-aws-eks-blueprints"
          [32m+[0m [0m"longpaths"  = "true"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = {
          [32m+[0m [0m"Blueprint"  = "ray"
          [32m+[0m [0m"GithubRepo" = "github.com/aws-ia/terraform-aws-eks-blueprints"
          [32m+[0m [0m"longpaths"  = "true"
        }
      [32m+[0m [0m[1m[0munique_id[0m[0m   = (known after apply)
    }

[1m  # module.eks_blueprints.module.aws_eks_managed_node_groups["mg_5"].aws_iam_role.managed_ng[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role" "managed_ng" {
      [32m+[0m [0m[1m[0marn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0massume_role_policy[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mcreate_date[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m           = "EKS Managed Node group IAM Role"
      [32m+[0m [0m[1m[0mforce_detach_policies[0m[0m = true
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mmanaged_policy_arns[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mmax_session_duration[0m[0m  = 3600
      [32m+[0m [0m[1m[0mname[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mname_prefix[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m                  = "/"
      [32m+[0m [0m[1m[0mtags[0m[0m                  = {
          [32m+[0m [0m"Blueprint"  = "ray"
          [32m+[0m [0m"GithubRepo" = "github.com/aws-ia/terraform-aws-eks-blueprints"
          [32m+[0m [0m"longpaths"  = "true"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m              = {
          [32m+[0m [0m"Blueprint"  = "ray"
          [32m+[0m [0m"GithubRepo" = "github.com/aws-ia/terraform-aws-eks-blueprints"
          [32m+[0m [0m"longpaths"  = "true"
        }
      [32m+[0m [0m[1m[0munique_id[0m[0m             = (known after apply)

      [32m+[0m [0minline_policy {
          [32m+[0m [0m[1m[0mname[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mpolicy[0m[0m = (known after apply)
        }
    }

[1m  # module.eks_blueprints.module.aws_eks_managed_node_groups["mg_5"].aws_iam_role_policy_attachment.managed_ng["arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "managed_ng" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
      [32m+[0m [0m[1m[0mrole[0m[0m       = (known after apply)
    }

[1m  # module.eks_blueprints.module.aws_eks_managed_node_groups["mg_5"].aws_iam_role_policy_attachment.managed_ng["arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "managed_ng" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"
      [32m+[0m [0m[1m[0mrole[0m[0m       = (known after apply)
    }

[1m  # module.eks_blueprints.module.aws_eks_managed_node_groups["mg_5"].aws_iam_role_policy_attachment.managed_ng["arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "managed_ng" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
      [32m+[0m [0m[1m[0mrole[0m[0m       = (known after apply)
    }

[1m  # module.eks_blueprints.module.aws_eks_managed_node_groups["mg_5"].aws_iam_role_policy_attachment.managed_ng["arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "managed_ng" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
      [32m+[0m [0m[1m[0mrole[0m[0m       = (known after apply)
    }

[1m  # module.eks_blueprints_kubernetes_addons.module.aws_load_balancer_controller[0].aws_iam_policy.aws_load_balancer_controller[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "aws_load_balancer_controller" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m = "Allows lb controller to manage ALB and NLB"
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = "iam:CreateServiceLinkedRole"
                      [32m+[0m [0mCondition = {
                          [32m+[0m [0mStringEquals = {
                              [32m+[0m [0m"iam:AWSServiceName" = "elasticloadbalancing.amazonaws.com"
                            }
                        }
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mResource  = "*"
                      [32m+[0m [0mSid       = ""
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"elasticloadbalancing:DescribeTargetHealth",
                          [32m+[0m [0m"elasticloadbalancing:DescribeTargetGroups",
                          [32m+[0m [0m"elasticloadbalancing:DescribeTargetGroupAttributes",
                          [32m+[0m [0m"elasticloadbalancing:DescribeTags",
                          [32m+[0m [0m"elasticloadbalancing:DescribeSSLPolicies",
                          [32m+[0m [0m"elasticloadbalancing:DescribeRules",
                          [32m+[0m [0m"elasticloadbalancing:DescribeLoadBalancers",
                          [32m+[0m [0m"elasticloadbalancing:DescribeLoadBalancerAttributes",
                          [32m+[0m [0m"elasticloadbalancing:DescribeListeners",
                          [32m+[0m [0m"elasticloadbalancing:DescribeListenerCertificates",
                          [32m+[0m [0m"ec2:GetCoipPoolUsage",
                          [32m+[0m [0m"ec2:DescribeVpcs",
                          [32m+[0m [0m"ec2:DescribeVpcPeeringConnections",
                          [32m+[0m [0m"ec2:DescribeTags",
                          [32m+[0m [0m"ec2:DescribeSubnets",
                          [32m+[0m [0m"ec2:DescribeSecurityGroups",
                          [32m+[0m [0m"ec2:DescribeNetworkInterfaces",
                          [32m+[0m [0m"ec2:DescribeInternetGateways",
                          [32m+[0m [0m"ec2:DescribeInstances",
                          [32m+[0m [0m"ec2:DescribeCoipPools",
                          [32m+[0m [0m"ec2:DescribeAvailabilityZones",
                          [32m+[0m [0m"ec2:DescribeAddresses",
                          [32m+[0m [0m"ec2:DescribeAccountAttributes",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                      [32m+[0m [0mSid      = ""
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"wafv2:GetWebACLForResource",
                          [32m+[0m [0m"wafv2:GetWebACL",
                          [32m+[0m [0m"wafv2:DisassociateWebACL",
                          [32m+[0m [0m"wafv2:AssociateWebACL",
                          [32m+[0m [0m"waf-regional:GetWebACLForResource",
                          [32m+[0m [0m"waf-regional:GetWebACL",
                          [32m+[0m [0m"waf-regional:DisassociateWebACL",
                          [32m+[0m [0m"waf-regional:AssociateWebACL",
                          [32m+[0m [0m"shield:GetSubscriptionState",
                          [32m+[0m [0m"shield:DescribeProtection",
                          [32m+[0m [0m"shield:DeleteProtection",
                          [32m+[0m [0m"shield:CreateProtection",
                          [32m+[0m [0m"iam:ListServerCertificates",
                          [32m+[0m [0m"iam:GetServerCertificate",
                          [32m+[0m [0m"cognito-idp:DescribeUserPoolClient",
                          [32m+[0m [0m"acm:ListCertificates",
                          [32m+[0m [0m"acm:DescribeCertificate",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                      [32m+[0m [0mSid      = ""
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"ec2:RevokeSecurityGroupIngress",
                          [32m+[0m [0m"ec2:AuthorizeSecurityGroupIngress",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                      [32m+[0m [0mSid      = ""
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = "ec2:CreateSecurityGroup"
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                      [32m+[0m [0mSid      = ""
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = "ec2:CreateTags"
                      [32m+[0m [0mCondition = {
                          [32m+[0m [0mNull         = {
                              [32m+[0m [0m"aws:RequestTag/elbv2.k8s.aws/cluster" = "false"
                            }
                          [32m+[0m [0mStringEquals = {
                              [32m+[0m [0m"ec2:CreateAction" = "CreateSecurityGroup"
                            }
                        }
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mResource  = "arn:aws:ec2:*:*:security-group/*"
                      [32m+[0m [0mSid       = ""
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = [
                          [32m+[0m [0m"ec2:DeleteTags",
                          [32m+[0m [0m"ec2:CreateTags",
                        ]
                      [32m+[0m [0mCondition = {
                          [32m+[0m [0mNull = {
                              [32m+[0m [0m"aws:ResourceTag/ingress.k8s.aws/cluster" = "false"
                            }
                        }
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mResource  = "arn:aws:ec2:*:*:security-group/*"
                      [32m+[0m [0mSid       = ""
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = [
                          [32m+[0m [0m"elasticloadbalancing:RemoveTags",
                          [32m+[0m [0m"elasticloadbalancing:DeleteTargetGroup",
                          [32m+[0m [0m"elasticloadbalancing:AddTags",
                        ]
                      [32m+[0m [0mCondition = {
                          [32m+[0m [0mNull = {
                              [32m+[0m [0m"aws:ResourceTag/ingress.k8s.aws/cluster" = "false"
                            }
                        }
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mResource  = [
                          [32m+[0m [0m"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*",
                          [32m+[0m [0m"arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*",
                          [32m+[0m [0m"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*",
                        ]
                      [32m+[0m [0mSid       = ""
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = [
                          [32m+[0m [0m"ec2:DeleteTags",
                          [32m+[0m [0m"ec2:CreateTags",
                        ]
                      [32m+[0m [0mCondition = {
                          [32m+[0m [0mNull = {
                              [32m+[0m [0m"aws:RequestTag/elbv2.k8s.aws/cluster"  = "true"
                              [32m+[0m [0m"aws:ResourceTag/elbv2.k8s.aws/cluster" = "false"
                            }
                        }
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mResource  = "arn:aws:ec2:*:*:security-group/*"
                      [32m+[0m [0mSid       = ""
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = [
                          [32m+[0m [0m"ec2:RevokeSecurityGroupIngress",
                          [32m+[0m [0m"ec2:DeleteSecurityGroup",
                          [32m+[0m [0m"ec2:AuthorizeSecurityGroupIngress",
                        ]
                      [32m+[0m [0mCondition = {
                          [32m+[0m [0mNull = {
                              [32m+[0m [0m"aws:ResourceTag/elbv2.k8s.aws/cluster" = "false"
                            }
                        }
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mResource  = "*"
                      [32m+[0m [0mSid       = ""
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = [
                          [32m+[0m [0m"elasticloadbalancing:CreateTargetGroup",
                          [32m+[0m [0m"elasticloadbalancing:CreateLoadBalancer",
                        ]
                      [32m+[0m [0mCondition = {
                          [32m+[0m [0mNull = {
                              [32m+[0m [0m"aws:RequestTag/elbv2.k8s.aws/cluster" = "false"
                            }
                        }
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mResource  = "*"
                      [32m+[0m [0mSid       = ""
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"elasticloadbalancing:DeleteRule",
                          [32m+[0m [0m"elasticloadbalancing:DeleteListener",
                          [32m+[0m [0m"elasticloadbalancing:CreateRule",
                          [32m+[0m [0m"elasticloadbalancing:CreateListener",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                      [32m+[0m [0mSid      = ""
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = [
                          [32m+[0m [0m"elasticloadbalancing:RemoveTags",
                          [32m+[0m [0m"elasticloadbalancing:AddTags",
                        ]
                      [32m+[0m [0mCondition = {
                          [32m+[0m [0mNull = {
                              [32m+[0m [0m"aws:RequestTag/elbv2.k8s.aws/cluster"  = "true"
                              [32m+[0m [0m"aws:ResourceTag/elbv2.k8s.aws/cluster" = "false"
                            }
                        }
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mResource  = [
                          [32m+[0m [0m"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*",
                          [32m+[0m [0m"arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*",
                          [32m+[0m [0m"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*",
                        ]
                      [32m+[0m [0mSid       = ""
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"elasticloadbalancing:RemoveTags",
                          [32m+[0m [0m"elasticloadbalancing:AddTags",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*",
                          [32m+[0m [0m"arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*",
                          [32m+[0m [0m"arn:aws:elasticloadbalancing:*:*:listener-rule/net/*/*/*",
                          [32m+[0m [0m"arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*",
                        ]
                      [32m+[0m [0mSid      = ""
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = [
                          [32m+[0m [0m"elasticloadbalancing:SetSubnets",
                          [32m+[0m [0m"elasticloadbalancing:SetSecurityGroups",
                          [32m+[0m [0m"elasticloadbalancing:SetIpAddressType",
                          [32m+[0m [0m"elasticloadbalancing:ModifyTargetGroupAttributes",
                          [32m+[0m [0m"elasticloadbalancing:ModifyTargetGroup",
                          [32m+[0m [0m"elasticloadbalancing:ModifyLoadBalancerAttributes",
                          [32m+[0m [0m"elasticloadbalancing:DeleteTargetGroup",
                          [32m+[0m [0m"elasticloadbalancing:DeleteLoadBalancer",
                        ]
                      [32m+[0m [0mCondition = {
                          [32m+[0m [0mNull = {
                              [32m+[0m [0m"aws:ResourceTag/elbv2.k8s.aws/cluster" = "false"
                            }
                        }
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mResource  = "*"
                      [32m+[0m [0mSid       = ""
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"elasticloadbalancing:RegisterTargets",
                          [32m+[0m [0m"elasticloadbalancing:DeregisterTargets",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*"
                      [32m+[0m [0mSid      = ""
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"elasticloadbalancing:SetWebAcl",
                          [32m+[0m [0m"elasticloadbalancing:RemoveListenerCertificates",
                          [32m+[0m [0m"elasticloadbalancing:ModifyRule",
                          [32m+[0m [0m"elasticloadbalancing:ModifyListener",
                          [32m+[0m [0m"elasticloadbalancing:AddListenerCertificates",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                      [32m+[0m [0mSid      = ""
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m        = {
          [32m+[0m [0m"Blueprint"  = "ray"
          [32m+[0m [0m"GithubRepo" = "github.com/aws-ia/terraform-aws-eks-blueprints"
          [32m+[0m [0m"longpaths"  = "true"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = {
          [32m+[0m [0m"Blueprint"  = "ray"
          [32m+[0m [0m"GithubRepo" = "github.com/aws-ia/terraform-aws-eks-blueprints"
          [32m+[0m [0m"longpaths"  = "true"
        }
    }

[1m  # module.eks_blueprints_kubernetes_addons.module.ingress_nginx[0].kubernetes_namespace_v1.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "kubernetes_namespace_v1" "this" {
      [32m+[0m [0m[1m[0mid[0m[0m = (known after apply)

      [32m+[0m [0mmetadata {
          [32m+[0m [0m[1m[0mgeneration[0m[0m       = (known after apply)
          [32m+[0m [0m[1m[0mname[0m[0m             = "ingress-nginx"
          [32m+[0m [0m[1m[0mresource_version[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0muid[0m[0m              = (known after apply)
        }
    }

[1m  # module.eks_blueprints_kubernetes_addons.module.kube_prometheus_stack[0].kubernetes_namespace_v1.prometheus[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "kubernetes_namespace_v1" "prometheus" {
      [32m+[0m [0m[1m[0mid[0m[0m = (known after apply)

      [32m+[0m [0mmetadata {
          [32m+[0m [0m[1m[0mgeneration[0m[0m       = (known after apply)
          [32m+[0m [0m[1m[0mname[0m[0m             = "kube-prometheus-stack"
          [32m+[0m [0m[1m[0mresource_version[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0muid[0m[0m              = (known after apply)
        }
    }

[1m  # module.eks_blueprints_kubernetes_addons.module.kuberay_operator[0].kubernetes_namespace_v1.this[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "kubernetes_namespace_v1" "this" {
      [32m+[0m [0m[1m[0mid[0m[0m = (known after apply)

      [32m+[0m [0mmetadata {
          [32m+[0m [0m[1m[0mgeneration[0m[0m       = (known after apply)
          [32m+[0m [0m[1m[0mname[0m[0m             = "kuberay-operator"
          [32m+[0m [0m[1m[0mresource_version[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0muid[0m[0m              = (known after apply)
        }
    }

[1m  # module.eks_blueprints_kubernetes_addons.module.aws_load_balancer_controller[0].module.helm_addon.helm_release.addon[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "helm_release" "addon" {
      [32m+[0m [0m[1m[0matomic[0m[0m                     = false
      [32m+[0m [0m[1m[0mchart[0m[0m                      = "aws-load-balancer-controller"
      [32m+[0m [0m[1m[0mcleanup_on_fail[0m[0m            = false
      [32m+[0m [0m[1m[0mcreate_namespace[0m[0m           = false
      [32m+[0m [0m[1m[0mdependency_update[0m[0m          = false
      [32m+[0m [0m[1m[0mdescription[0m[0m                = "aws-load-balancer-controller Helm Chart for ingress resources"
      [32m+[0m [0m[1m[0mdisable_crd_hooks[0m[0m          = false
      [32m+[0m [0m[1m[0mdisable_openapi_validation[0m[0m = false
      [32m+[0m [0m[1m[0mdisable_webhooks[0m[0m           = false
      [32m+[0m [0m[1m[0mforce_update[0m[0m               = false
      [32m+[0m [0m[1m[0mid[0m[0m                         = (known after apply)
      [32m+[0m [0m[1m[0mlint[0m[0m                       = false
      [32m+[0m [0m[1m[0mmanifest[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mmax_history[0m[0m                = 0
      [32m+[0m [0m[1m[0mmetadata[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                       = "aws-load-balancer-controller"
      [32m+[0m [0m[1m[0mnamespace[0m[0m                  = "kube-system"
      [32m+[0m [0m[1m[0mpass_credentials[0m[0m           = false
      [32m+[0m [0m[1m[0mrecreate_pods[0m[0m              = false
      [32m+[0m [0m[1m[0mrender_subchart_notes[0m[0m      = true
      [32m+[0m [0m[1m[0mreplace[0m[0m                    = false
      [32m+[0m [0m[1m[0mrepository[0m[0m                 = "https://aws.github.io/eks-charts"
      [32m+[0m [0m[1m[0mreset_values[0m[0m               = false
      [32m+[0m [0m[1m[0mreuse_values[0m[0m               = false
      [32m+[0m [0m[1m[0mskip_crds[0m[0m                  = false
      [32m+[0m [0m[1m[0mstatus[0m[0m                     = "deployed"
      [32m+[0m [0m[1m[0mtimeout[0m[0m                    = 1200
      [32m+[0m [0m[1m[0mvalues[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mverify[0m[0m                     = false
      [32m+[0m [0m[1m[0mversion[0m[0m                    = "1.4.5"
      [32m+[0m [0m[1m[0mwait[0m[0m                       = true
      [32m+[0m [0m[1m[0mwait_for_jobs[0m[0m              = false

      [32m+[0m [0mpostrender {}

      [32m+[0m [0mset {
          [32m+[0m [0m[1m[0mname[0m[0m  = "serviceAccount.create"
          [32m+[0m [0m[1m[0mvalue[0m[0m = "false"
        }
      [32m+[0m [0mset {
          [32m+[0m [0m[1m[0mname[0m[0m  = "serviceAccount.name"
          [32m+[0m [0m[1m[0mvalue[0m[0m = "aws-load-balancer-controller-sa"
        }
    }

[1m  # module.eks_blueprints_kubernetes_addons.module.ingress_nginx[0].module.helm_addon.helm_release.addon[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "helm_release" "addon" {
      [32m+[0m [0m[1m[0matomic[0m[0m                     = false
      [32m+[0m [0m[1m[0mchart[0m[0m                      = "ingress-nginx"
      [32m+[0m [0m[1m[0mcleanup_on_fail[0m[0m            = false
      [32m+[0m [0m[1m[0mcreate_namespace[0m[0m           = false
      [32m+[0m [0m[1m[0mdependency_update[0m[0m          = false
      [32m+[0m [0m[1m[0mdescription[0m[0m                = "The NGINX HelmChart Ingress Controller deployment configuration"
      [32m+[0m [0m[1m[0mdisable_crd_hooks[0m[0m          = false
      [32m+[0m [0m[1m[0mdisable_openapi_validation[0m[0m = false
      [32m+[0m [0m[1m[0mdisable_webhooks[0m[0m           = false
      [32m+[0m [0m[1m[0mforce_update[0m[0m               = false
      [32m+[0m [0m[1m[0mid[0m[0m                         = (known after apply)
      [32m+[0m [0m[1m[0mlint[0m[0m                       = false
      [32m+[0m [0m[1m[0mmanifest[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mmax_history[0m[0m                = 0
      [32m+[0m [0m[1m[0mmetadata[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                       = "ingress-nginx"
      [32m+[0m [0m[1m[0mnamespace[0m[0m                  = "ingress-nginx"
      [32m+[0m [0m[1m[0mpass_credentials[0m[0m           = false
      [32m+[0m [0m[1m[0mrecreate_pods[0m[0m              = false
      [32m+[0m [0m[1m[0mrender_subchart_notes[0m[0m      = true
      [32m+[0m [0m[1m[0mreplace[0m[0m                    = false
      [32m+[0m [0m[1m[0mrepository[0m[0m                 = "https://kubernetes.github.io/ingress-nginx"
      [32m+[0m [0m[1m[0mreset_values[0m[0m               = false
      [32m+[0m [0m[1m[0mreuse_values[0m[0m               = false
      [32m+[0m [0m[1m[0mskip_crds[0m[0m                  = false
      [32m+[0m [0m[1m[0mstatus[0m[0m                     = "deployed"
      [32m+[0m [0m[1m[0mtimeout[0m[0m                    = 1200
      [32m+[0m [0m[1m[0mvalues[0m[0m                     = [
          [32m+[0m [0m<<-EOT
                controller:
                  service:
                    type: LoadBalancer
                    externalTrafficPolicy: "Local"
                    annotations:
                      # AWS Load Balancer Controller Annotations
                      service.beta.kubernetes.io/aws-load-balancer-type: external
                      service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: ip
                      service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
                      service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
                
                      
                
                      
                      # External DNS Annotations
                      external-dns.alpha.kubernetes.io/hostname: 
                      
                    targetPorts:
                      http: http
                      https: http
            EOT,
        ]
      [32m+[0m [0m[1m[0mverify[0m[0m                     = false
      [32m+[0m [0m[1m[0mversion[0m[0m                    = "4.1.4"
      [32m+[0m [0m[1m[0mwait[0m[0m                       = true
      [32m+[0m [0m[1m[0mwait_for_jobs[0m[0m              = false

      [32m+[0m [0mpostrender {}
    }

[1m  # module.eks_blueprints_kubernetes_addons.module.kube_prometheus_stack[0].module.helm_addon.helm_release.addon[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "helm_release" "addon" {
      [32m+[0m [0m[1m[0matomic[0m[0m                     = false
      [32m+[0m [0m[1m[0mchart[0m[0m                      = "kube-prometheus-stack"
      [32m+[0m [0m[1m[0mcleanup_on_fail[0m[0m            = false
      [32m+[0m [0m[1m[0mcreate_namespace[0m[0m           = false
      [32m+[0m [0m[1m[0mdependency_update[0m[0m          = false
      [32m+[0m [0m[1m[0mdescription[0m[0m                = "kube-prometheus-stack helm Chart deployment configuration"
      [32m+[0m [0m[1m[0mdisable_crd_hooks[0m[0m          = false
      [32m+[0m [0m[1m[0mdisable_openapi_validation[0m[0m = false
      [32m+[0m [0m[1m[0mdisable_webhooks[0m[0m           = false
      [32m+[0m [0m[1m[0mforce_update[0m[0m               = false
      [32m+[0m [0m[1m[0mid[0m[0m                         = (known after apply)
      [32m+[0m [0m[1m[0mkeyring[0m[0m                    = ""
      [32m+[0m [0m[1m[0mlint[0m[0m                       = false
      [32m+[0m [0m[1m[0mmanifest[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mmax_history[0m[0m                = 0
      [32m+[0m [0m[1m[0mmetadata[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                       = "kube-prometheus-stack"
      [32m+[0m [0m[1m[0mnamespace[0m[0m                  = "kube-prometheus-stack"
      [32m+[0m [0m[1m[0mpass_credentials[0m[0m           = false
      [32m+[0m [0m[1m[0mrecreate_pods[0m[0m              = false
      [32m+[0m [0m[1m[0mrender_subchart_notes[0m[0m      = true
      [32m+[0m [0m[1m[0mreplace[0m[0m                    = false
      [32m+[0m [0m[1m[0mrepository[0m[0m                 = "https://prometheus-community.github.io/helm-charts"
      [32m+[0m [0m[1m[0mrepository_cert_file[0m[0m       = ""
      [32m+[0m [0m[1m[0mrepository_key_file[0m[0m        = ""
      [32m+[0m [0m[1m[0mrepository_password[0m[0m        = (sensitive value)
      [32m+[0m [0m[1m[0mrepository_username[0m[0m        = ""
      [32m+[0m [0m[1m[0mreset_values[0m[0m               = false
      [32m+[0m [0m[1m[0mreuse_values[0m[0m               = false
      [32m+[0m [0m[1m[0mskip_crds[0m[0m                  = false
      [32m+[0m [0m[1m[0mstatus[0m[0m                     = "deployed"
      [32m+[0m [0m[1m[0mtimeout[0m[0m                    = 1200
      [32m+[0m [0m[1m[0mvalues[0m[0m                     = [
          [32m+[0m [0m<<-EOT
                alertManager:
                  enabled: false
                grafana:
                  grafana.ini:
                    server:
                      root_url: https:///monitoring/
                      serve_from_sub_path: true
                  ingress:
                    enabled: true
                    ingressClassName: nginx
                    
                    hosts:
                      - ray-demo.
                    
                    path: /monitoring
            EOT,
        ]
      [32m+[0m [0m[1m[0mverify[0m[0m                     = false
      [32m+[0m [0m[1m[0mversion[0m[0m                    = "41.6.1"
      [32m+[0m [0m[1m[0mwait[0m[0m                       = true
      [32m+[0m [0m[1m[0mwait_for_jobs[0m[0m              = false

      [32m+[0m [0mpostrender {}

      [32m+[0m [0mset_sensitive {
          # At least one attribute in this block is (or was) sensitive,
          # so its contents will not be displayed.
        }
    }

[1m  # module.eks_blueprints_kubernetes_addons.module.kuberay_operator[0].module.helm_addon.helm_release.addon[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "helm_release" "addon" {
      [32m+[0m [0m[1m[0matomic[0m[0m                     = false
      [32m+[0m [0m[1m[0mchart[0m[0m                      = "../../../modules/kubernetes-addons/kuberay-operator/kuberay-operator-config"
      [32m+[0m [0m[1m[0mcleanup_on_fail[0m[0m            = false
      [32m+[0m [0m[1m[0mcreate_namespace[0m[0m           = false
      [32m+[0m [0m[1m[0mdependency_update[0m[0m          = false
      [32m+[0m [0m[1m[0mdescription[0m[0m                = "KubeRay Operator Helm Chart deployment configuration"
      [32m+[0m [0m[1m[0mdisable_crd_hooks[0m[0m          = false
      [32m+[0m [0m[1m[0mdisable_openapi_validation[0m[0m = false
      [32m+[0m [0m[1m[0mdisable_webhooks[0m[0m           = false
      [32m+[0m [0m[1m[0mforce_update[0m[0m               = false
      [32m+[0m [0m[1m[0mid[0m[0m                         = (known after apply)
      [32m+[0m [0m[1m[0mlint[0m[0m                       = false
      [32m+[0m [0m[1m[0mmanifest[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mmax_history[0m[0m                = 0
      [32m+[0m [0m[1m[0mmetadata[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                       = "kuberay-operator"
      [32m+[0m [0m[1m[0mnamespace[0m[0m                  = "kuberay-operator"
      [32m+[0m [0m[1m[0mpass_credentials[0m[0m           = false
      [32m+[0m [0m[1m[0mrecreate_pods[0m[0m              = false
      [32m+[0m [0m[1m[0mrender_subchart_notes[0m[0m      = true
      [32m+[0m [0m[1m[0mreplace[0m[0m                    = false
      [32m+[0m [0m[1m[0mreset_values[0m[0m               = false
      [32m+[0m [0m[1m[0mreuse_values[0m[0m               = false
      [32m+[0m [0m[1m[0mskip_crds[0m[0m                  = false
      [32m+[0m [0m[1m[0mstatus[0m[0m                     = "deployed"
      [32m+[0m [0m[1m[0mtimeout[0m[0m                    = 1200
      [32m+[0m [0m[1m[0mverify[0m[0m                     = false
      [32m+[0m [0m[1m[0mversion[0m[0m                    = "0.1.0"
      [32m+[0m [0m[1m[0mwait[0m[0m                       = true
      [32m+[0m [0m[1m[0mwait_for_jobs[0m[0m              = false

      [32m+[0m [0mpostrender {}
    }

[1m  # module.eks_blueprints_kubernetes_addons.module.aws_load_balancer_controller[0].module.helm_addon.module.irsa[0].aws_iam_role.irsa[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role" "irsa" {
      [32m+[0m [0m[1m[0marn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0massume_role_policy[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mcreate_date[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m           = "AWS IAM Role for the Kubernetes service account aws-load-balancer-controller-sa."
      [32m+[0m [0m[1m[0mforce_detach_policies[0m[0m = true
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mmanaged_policy_arns[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mmax_session_duration[0m[0m  = 3600
      [32m+[0m [0m[1m[0mname[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mname_prefix[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m                  = "/"
      [32m+[0m [0m[1m[0mtags[0m[0m                  = {
          [32m+[0m [0m"Blueprint"  = "ray"
          [32m+[0m [0m"GithubRepo" = "github.com/aws-ia/terraform-aws-eks-blueprints"
          [32m+[0m [0m"longpaths"  = "true"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m              = {
          [32m+[0m [0m"Blueprint"  = "ray"
          [32m+[0m [0m"GithubRepo" = "github.com/aws-ia/terraform-aws-eks-blueprints"
          [32m+[0m [0m"longpaths"  = "true"
        }
      [32m+[0m [0m[1m[0munique_id[0m[0m             = (known after apply)

      [32m+[0m [0minline_policy {
          [32m+[0m [0m[1m[0mname[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mpolicy[0m[0m = (known after apply)
        }
    }

[1m  # module.eks_blueprints_kubernetes_addons.module.aws_load_balancer_controller[0].module.helm_addon.module.irsa[0].aws_iam_role_policy_attachment.irsa[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "irsa" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mrole[0m[0m       = (known after apply)
    }

[1m  # module.eks_blueprints_kubernetes_addons.module.aws_load_balancer_controller[0].module.helm_addon.module.irsa[0].kubernetes_service_account_v1.irsa[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "kubernetes_service_account_v1" "irsa" {
      [32m+[0m [0m[1m[0mautomount_service_account_token[0m[0m = true
      [32m+[0m [0m[1m[0mdefault_secret_name[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                              = (known after apply)

      [32m+[0m [0mmetadata {
          [32m+[0m [0m[1m[0mannotations[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mgeneration[0m[0m       = (known after apply)
          [32m+[0m [0m[1m[0mname[0m[0m             = "aws-load-balancer-controller-sa"
          [32m+[0m [0m[1m[0mnamespace[0m[0m        = "kube-system"
          [32m+[0m [0m[1m[0mresource_version[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0muid[0m[0m              = (known after apply)
        }
    }

[0m[1mPlan:[0m 74 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0mconfigure_kubectl[0m[0m = (known after apply)
[33m╷[0m[0m
[33m│[0m [0m[1m[33mWarning: [0m[0m[1mVersion constraints inside provider configuration blocks are deprecated[0m
[33m│[0m [0m
[33m│[0m [0m[0m  on main.tf line 3, in provider "aws":
[33m│[0m [0m   3:   version = [4m">= 3.0"[0m[0m
[33m│[0m [0m
[33m│[0m [0mTerraform 0.13 and earlier allowed provider version constraints inside the provider configuration block, but that is now deprecated and will be removed in
[33m│[0m [0ma future version of Terraform. To silence this warning, move the provider version constraint into the required_providers block.
[33m╵[0m[0m
[33m╷[0m[0m
[33m│[0m [0m[1m[33mWarning: [0m[0m[1mDeprecated attribute[0m
[33m│[0m [0m
[33m│[0m [0m[0m  on .terraform/modules/s3_bucket/main.tf line 27, in resource "aws_s3_bucket" "this":
[33m│[0m [0m  27:       [4macceleration_status[0m,[0m
[33m│[0m [0m
[33m│[0m [0mThe attribute "acceleration_status" is deprecated. Refer to the provider documentation for details.
[33m│[0m [0m
[33m│[0m [0m(and 2 more similar warnings elsewhere)
[33m╵[0m[0m
[0m[1m
Do you want to perform these actions?[0m
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  [1mEnter a value:[0m [0m
Apply cancelled.
